declare namespace _default {
    let $schema: string;
    let $comment: string;
    namespace definitions {
        namespace FundamentalsTimeSeries_Period {
            export let type: string;
            let _enum: string[];
            export { _enum as enum };
        }
        namespace FundamentalsTimeSeriesFinancialsResult {
            let type_1: string;
            export { type_1 as type };
            export namespace properties {
                namespace date {
                    let type_2: string;
                    export { type_2 as type };
                    export let format: string;
                }
                namespace TYPE {
                    let type_3: string;
                    export { type_3 as type };
                    let _const: string;
                    export { _const as const };
                }
                namespace periodType {
                    let $ref: string;
                }
                namespace totalRevenue {
                    let type_4: string;
                    export { type_4 as type };
                }
                namespace operatingRevenue {
                    let type_5: string;
                    export { type_5 as type };
                }
                namespace costOfRevenue {
                    let type_6: string;
                    export { type_6 as type };
                }
                namespace grossProfit {
                    let type_7: string;
                    export { type_7 as type };
                }
                namespace sellingGeneralAndAdministration {
                    let type_8: string;
                    export { type_8 as type };
                }
                namespace sellingAndMarketingExpense {
                    let type_9: string;
                    export { type_9 as type };
                }
                namespace generalAndAdministrativeExpense {
                    let type_10: string;
                    export { type_10 as type };
                }
                namespace otherGandA {
                    let type_11: string;
                    export { type_11 as type };
                }
                namespace researchAndDevelopment {
                    let type_12: string;
                    export { type_12 as type };
                }
                namespace depreciationAmortizationDepletionIncomeStatement {
                    let type_13: string;
                    export { type_13 as type };
                }
                namespace depletionIncomeStatement {
                    let type_14: string;
                    export { type_14 as type };
                }
                namespace depreciationAndAmortizationInIncomeStatement {
                    let type_15: string;
                    export { type_15 as type };
                }
                namespace amortization {
                    let type_16: string;
                    export { type_16 as type };
                }
                namespace amortizationOfIntangiblesIncomeStatement {
                    let type_17: string;
                    export { type_17 as type };
                }
                namespace depreciationIncomeStatement {
                    let type_18: string;
                    export { type_18 as type };
                }
                namespace otherOperatingExpenses {
                    let type_19: string;
                    export { type_19 as type };
                }
                namespace operatingExpense {
                    let type_20: string;
                    export { type_20 as type };
                }
                namespace operatingIncome {
                    let type_21: string;
                    export { type_21 as type };
                }
                namespace interestExpenseNonOperating {
                    let type_22: string;
                    export { type_22 as type };
                }
                namespace interestIncomeNonOperating {
                    let type_23: string;
                    export { type_23 as type };
                }
                namespace totalOtherFinanceCost {
                    let type_24: string;
                    export { type_24 as type };
                }
                namespace netNonOperatingInterestIncomeExpense {
                    let type_25: string;
                    export { type_25 as type };
                }
                namespace writeOff {
                    let type_26: string;
                    export { type_26 as type };
                }
                namespace specialIncomeCharges {
                    let type_27: string;
                    export { type_27 as type };
                }
                namespace gainOnSaleOfPPE {
                    let type_28: string;
                    export { type_28 as type };
                }
                namespace gainOnSaleOfBusiness {
                    let type_29: string;
                    export { type_29 as type };
                }
                namespace gainOnSaleOfSecurity {
                    let type_30: string;
                    export { type_30 as type };
                }
                namespace otherSpecialCharges {
                    let type_31: string;
                    export { type_31 as type };
                }
                namespace otherIncomeExpense {
                    let type_32: string;
                    export { type_32 as type };
                }
                namespace otherNonOperatingIncomeExpenses {
                    let type_33: string;
                    export { type_33 as type };
                }
                namespace totalExpenses {
                    let type_34: string;
                    export { type_34 as type };
                }
                namespace pretaxIncome {
                    let type_35: string;
                    export { type_35 as type };
                }
                namespace taxProvision {
                    let type_36: string;
                    export { type_36 as type };
                }
                namespace netIncomeContinuousOperations {
                    let type_37: string;
                    export { type_37 as type };
                }
                namespace netIncomeIncludingNoncontrollingInterests {
                    let type_38: string;
                    export { type_38 as type };
                }
                namespace minorityInterests {
                    let type_39: string;
                    export { type_39 as type };
                }
                namespace netIncomeFromTaxLossCarryforward {
                    let type_40: string;
                    export { type_40 as type };
                }
                namespace netIncomeExtraordinary {
                    let type_41: string;
                    export { type_41 as type };
                }
                namespace netIncomeDiscontinuousOperations {
                    let type_42: string;
                    export { type_42 as type };
                }
                namespace preferredStockDividends {
                    let type_43: string;
                    export { type_43 as type };
                }
                namespace otherunderPreferredStockDividend {
                    let type_44: string;
                    export { type_44 as type };
                }
                namespace netIncomeCommonStockholders {
                    let type_45: string;
                    export { type_45 as type };
                }
                namespace netIncome {
                    let type_46: string;
                    export { type_46 as type };
                }
                namespace basicAverageShares {
                    let type_47: string;
                    export { type_47 as type };
                }
                namespace dilutedAverageShares {
                    let type_48: string;
                    export { type_48 as type };
                }
                namespace dividendPerShare {
                    let type_49: string;
                    export { type_49 as type };
                }
                namespace reportedNormalizedBasicEPS {
                    let type_50: string;
                    export { type_50 as type };
                }
                namespace continuingAndDiscontinuedBasicEPS {
                    let type_51: string;
                    export { type_51 as type };
                }
                namespace basicEPSOtherGainsLosses {
                    let type_52: string;
                    export { type_52 as type };
                }
                namespace taxLossCarryforwardBasicEPS {
                    let type_53: string;
                    export { type_53 as type };
                }
                namespace normalizedBasicEPS {
                    let type_54: string;
                    export { type_54 as type };
                }
                namespace basicEPS {
                    let type_55: string;
                    export { type_55 as type };
                }
                namespace basicAccountingChange {
                    let type_56: string;
                    export { type_56 as type };
                }
                namespace basicExtraordinary {
                    let type_57: string;
                    export { type_57 as type };
                }
                namespace basicDiscontinuousOperations {
                    let type_58: string;
                    export { type_58 as type };
                }
                namespace basicContinuousOperations {
                    let type_59: string;
                    export { type_59 as type };
                }
                namespace reportedNormalizedDilutedEPS {
                    let type_60: string;
                    export { type_60 as type };
                }
                namespace continuingAndDiscontinuedDilutedEPS {
                    let type_61: string;
                    export { type_61 as type };
                }
                namespace taxLossCarryforwardDilutedEPS {
                    let type_62: string;
                    export { type_62 as type };
                }
                namespace averageDilutionEarnings {
                    let type_63: string;
                    export { type_63 as type };
                }
                namespace normalizedDilutedEPS {
                    let type_64: string;
                    export { type_64 as type };
                }
                namespace dilutedEPS {
                    let type_65: string;
                    export { type_65 as type };
                }
                namespace dilutedAccountingChange {
                    let type_66: string;
                    export { type_66 as type };
                }
                namespace dilutedExtraordinary {
                    let type_67: string;
                    export { type_67 as type };
                }
                namespace dilutedContinuousOperations {
                    let type_68: string;
                    export { type_68 as type };
                }
                namespace dilutedDiscontinuousOperations {
                    let type_69: string;
                    export { type_69 as type };
                }
                namespace dilutedNIAvailtoComStockholders {
                    let type_70: string;
                    export { type_70 as type };
                }
                namespace dilutedEPSOtherGainsLosses {
                    let type_71: string;
                    export { type_71 as type };
                }
                namespace totalOperatingIncomeAsReported {
                    let type_72: string;
                    export { type_72 as type };
                }
                namespace netIncomeFromContinuingAndDiscontinuedOperation {
                    let type_73: string;
                    export { type_73 as type };
                }
                namespace normalizedIncome {
                    let type_74: string;
                    export { type_74 as type };
                }
                namespace netInterestIncome {
                    let type_75: string;
                    export { type_75 as type };
                }
                namespace EBIT {
                    let type_76: string;
                    export { type_76 as type };
                }
                namespace EBITDA {
                    let type_77: string;
                    export { type_77 as type };
                }
                namespace reconciledCostOfRevenue {
                    let type_78: string;
                    export { type_78 as type };
                }
                namespace reconciledDepreciation {
                    let type_79: string;
                    export { type_79 as type };
                }
                namespace netIncomeFromContinuingOperationNetMinorityInterest {
                    let type_80: string;
                    export { type_80 as type };
                }
                namespace totalUnusualItemsExcludingGoodwill {
                    let type_81: string;
                    export { type_81 as type };
                }
                namespace totalUnusualItems {
                    let type_82: string;
                    export { type_82 as type };
                }
                namespace normalizedEBITDA {
                    let type_83: string;
                    export { type_83 as type };
                }
                namespace taxRateForCalcs {
                    let type_84: string;
                    export { type_84 as type };
                }
                namespace taxEffectOfUnusualItems {
                    let type_85: string;
                    export { type_85 as type };
                }
                namespace rentExpenseSupplemental {
                    let type_86: string;
                    export { type_86 as type };
                }
                namespace earningsFromEquityInterestNetOfTax {
                    let type_87: string;
                    export { type_87 as type };
                }
                namespace impairmentOfCapitalAssets {
                    let type_88: string;
                    export { type_88 as type };
                }
                namespace restructuringAndMergernAcquisition {
                    let type_89: string;
                    export { type_89 as type };
                }
                namespace securitiesAmortization {
                    let type_90: string;
                    export { type_90 as type };
                }
                namespace earningsFromEquityInterest {
                    let type_91: string;
                    export { type_91 as type };
                }
                namespace otherTaxes {
                    let type_92: string;
                    export { type_92 as type };
                }
                namespace provisionForDoubtfulAccounts {
                    let type_93: string;
                    export { type_93 as type };
                }
                namespace insuranceAndClaims {
                    let type_94: string;
                    export { type_94 as type };
                }
                namespace rentAndLandingFees {
                    let type_95: string;
                    export { type_95 as type };
                }
                namespace salariesAndWages {
                    let type_96: string;
                    export { type_96 as type };
                }
                namespace exciseTaxes {
                    let type_97: string;
                    export { type_97 as type };
                }
                namespace interestExpense {
                    let type_98: string;
                    export { type_98 as type };
                }
                namespace interestIncome {
                    let type_99: string;
                    export { type_99 as type };
                }
                namespace totalMoneyMarketInvestments {
                    let type_100: string;
                    export { type_100 as type };
                }
                namespace interestIncomeAfterProvisionForLoanLoss {
                    let type_101: string;
                    export { type_101 as type };
                }
                namespace otherThanPreferredStockDividend {
                    let type_102: string;
                    export { type_102 as type };
                }
                namespace lossonExtinguishmentofDebt {
                    let type_103: string;
                    export { type_103 as type };
                }
                namespace incomefromAssociatesandOtherParticipatingInterests {
                    let type_104: string;
                    export { type_104 as type };
                }
                namespace nonInterestExpense {
                    let type_105: string;
                    export { type_105 as type };
                }
                namespace otherNonInterestExpense {
                    let type_106: string;
                    export { type_106 as type };
                }
                namespace professionalExpenseAndContractServicesExpense {
                    let type_107: string;
                    export { type_107 as type };
                }
                namespace occupancyAndEquipment {
                    let type_108: string;
                    export { type_108 as type };
                }
                namespace equipment {
                    let type_109: string;
                    export { type_109 as type };
                }
                namespace netOccupancyExpense {
                    let type_110: string;
                    export { type_110 as type };
                }
                namespace creditLossesProvision {
                    let type_111: string;
                    export { type_111 as type };
                }
                namespace nonInterestIncome {
                    let type_112: string;
                    export { type_112 as type };
                }
                namespace otherNonInterestIncome {
                    let type_113: string;
                    export { type_113 as type };
                }
                namespace gainLossonSaleofAssets {
                    let type_114: string;
                    export { type_114 as type };
                }
                namespace gainonSaleofInvestmentProperty {
                    let type_115: string;
                    export { type_115 as type };
                }
                namespace gainonSaleofLoans {
                    let type_116: string;
                    export { type_116 as type };
                }
                namespace foreignExchangeTradingGains {
                    let type_117: string;
                    export { type_117 as type };
                }
                namespace tradingGainLoss {
                    let type_118: string;
                    export { type_118 as type };
                }
                namespace investmentBankingProfit {
                    let type_119: string;
                    export { type_119 as type };
                }
                namespace dividendIncome {
                    let type_120: string;
                    export { type_120 as type };
                }
                namespace feesAndCommissions {
                    let type_121: string;
                    export { type_121 as type };
                }
                namespace feesandCommissionExpense {
                    let type_122: string;
                    export { type_122 as type };
                }
                namespace feesandCommissionIncome {
                    let type_123: string;
                    export { type_123 as type };
                }
                namespace otherCustomerServices {
                    let type_124: string;
                    export { type_124 as type };
                }
                namespace creditCard {
                    let type_125: string;
                    export { type_125 as type };
                }
                namespace securitiesActivities {
                    let type_126: string;
                    export { type_126 as type };
                }
                namespace trustFeesbyCommissions {
                    let type_127: string;
                    export { type_127 as type };
                }
                namespace serviceChargeOnDepositorAccounts {
                    let type_128: string;
                    export { type_128 as type };
                }
                namespace totalPremiumsEarned {
                    let type_129: string;
                    export { type_129 as type };
                }
                namespace otherInterestExpense {
                    let type_130: string;
                    export { type_130 as type };
                }
                namespace interestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell {
                    let type_131: string;
                    export { type_131 as type };
                }
                namespace interestExpenseForLongTermDebtAndCapitalSecurities {
                    let type_132: string;
                    export { type_132 as type };
                }
                namespace interestExpenseForShortTermDebt {
                    let type_133: string;
                    export { type_133 as type };
                }
                namespace interestExpenseForDeposit {
                    let type_134: string;
                    export { type_134 as type };
                }
                namespace otherInterestIncome {
                    let type_135: string;
                    export { type_135 as type };
                }
                namespace interestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell {
                    let type_136: string;
                    export { type_136 as type };
                }
                namespace interestIncomeFromDeposits {
                    let type_137: string;
                    export { type_137 as type };
                }
                namespace interestIncomeFromSecurities {
                    let type_138: string;
                    export { type_138 as type };
                }
                namespace interestIncomeFromLoansAndLease {
                    let type_139: string;
                    export { type_139 as type };
                }
                namespace interestIncomeFromLeases {
                    let type_140: string;
                    export { type_140 as type };
                }
                namespace interestIncomeFromLoans {
                    let type_141: string;
                    export { type_141 as type };
                }
                namespace depreciationDepreciationIncomeStatement {
                    let type_142: string;
                    export { type_142 as type };
                }
                namespace operationAndMaintenance {
                    let type_143: string;
                    export { type_143 as type };
                }
                namespace otherCostofRevenue {
                    let type_144: string;
                    export { type_144 as type };
                }
                namespace explorationDevelopmentAndMineralPropertyLeaseExpenses {
                    let type_145: string;
                    export { type_145 as type };
                }
            }
            export let required: string[];
            export let additionalProperties: boolean;
        }
        namespace FundamentalsTimeSeriesBalanceSheetResult {
            let type_146: string;
            export { type_146 as type };
            export namespace properties_1 {
                export namespace date_1 {
                    let type_147: string;
                    export { type_147 as type };
                    let format_1: string;
                    export { format_1 as format };
                }
                export { date_1 as date };
                export namespace TYPE_1 {
                    let type_148: string;
                    export { type_148 as type };
                    let _const_1: string;
                    export { _const_1 as const };
                }
                export { TYPE_1 as TYPE };
                export namespace periodType_1 {
                    let $ref_1: string;
                    export { $ref_1 as $ref };
                }
                export { periodType_1 as periodType };
                export namespace netDebt {
                    let type_149: string;
                    export { type_149 as type };
                }
                export namespace treasurySharesNumber {
                    let type_150: string;
                    export { type_150 as type };
                }
                export namespace preferredSharesNumber {
                    let type_151: string;
                    export { type_151 as type };
                }
                export namespace ordinarySharesNumber {
                    let type_152: string;
                    export { type_152 as type };
                }
                export namespace shareIssued {
                    let type_153: string;
                    export { type_153 as type };
                }
                export namespace totalDebt {
                    let type_154: string;
                    export { type_154 as type };
                }
                export namespace tangibleBookValue {
                    let type_155: string;
                    export { type_155 as type };
                }
                export namespace investedCapital {
                    let type_156: string;
                    export { type_156 as type };
                }
                export namespace workingCapital {
                    let type_157: string;
                    export { type_157 as type };
                }
                export namespace netTangibleAssets {
                    let type_158: string;
                    export { type_158 as type };
                }
                export namespace capitalLeaseObligations {
                    let type_159: string;
                    export { type_159 as type };
                }
                export namespace commonStockEquity {
                    let type_160: string;
                    export { type_160 as type };
                }
                export namespace preferredStockEquity {
                    let type_161: string;
                    export { type_161 as type };
                }
                export namespace totalCapitalization {
                    let type_162: string;
                    export { type_162 as type };
                }
                export namespace totalEquityGrossMinorityInterest {
                    let type_163: string;
                    export { type_163 as type };
                }
                export namespace minorityInterest {
                    let type_164: string;
                    export { type_164 as type };
                }
                export namespace stockholdersEquity {
                    let type_165: string;
                    export { type_165 as type };
                }
                export namespace otherEquityInterest {
                    let type_166: string;
                    export { type_166 as type };
                }
                export namespace gainsLossesNotAffectingRetainedEarnings {
                    let type_167: string;
                    export { type_167 as type };
                }
                export namespace otherEquityAdjustments {
                    let type_168: string;
                    export { type_168 as type };
                }
                export namespace fixedAssetsRevaluationReserve {
                    let type_169: string;
                    export { type_169 as type };
                }
                export namespace foreignCurrencyTranslationAdjustments {
                    let type_170: string;
                    export { type_170 as type };
                }
                export namespace minimumPensionLiabilities {
                    let type_171: string;
                    export { type_171 as type };
                }
                export namespace unrealizedGainLoss {
                    let type_172: string;
                    export { type_172 as type };
                }
                export namespace treasuryStock {
                    let type_173: string;
                    export { type_173 as type };
                }
                export namespace retainedEarnings {
                    let type_174: string;
                    export { type_174 as type };
                }
                export namespace additionalPaidInCapital {
                    let type_175: string;
                    export { type_175 as type };
                }
                export namespace capitalStock {
                    let type_176: string;
                    export { type_176 as type };
                }
                export namespace otherCapitalStock {
                    let type_177: string;
                    export { type_177 as type };
                }
                export namespace commonStock {
                    let type_178: string;
                    export { type_178 as type };
                }
                export namespace preferredStock {
                    let type_179: string;
                    export { type_179 as type };
                }
                export namespace totalPartnershipCapital {
                    let type_180: string;
                    export { type_180 as type };
                }
                export namespace generalPartnershipCapital {
                    let type_181: string;
                    export { type_181 as type };
                }
                export namespace limitedPartnershipCapital {
                    let type_182: string;
                    export { type_182 as type };
                }
                export namespace totalLiabilitiesNetMinorityInterest {
                    let type_183: string;
                    export { type_183 as type };
                }
                export namespace totalNonCurrentLiabilitiesNetMinorityInterest {
                    let type_184: string;
                    export { type_184 as type };
                }
                export namespace otherNonCurrentLiabilities {
                    let type_185: string;
                    export { type_185 as type };
                }
                export namespace liabilitiesHeldforSaleNonCurrent {
                    let type_186: string;
                    export { type_186 as type };
                }
                export namespace restrictedCommonStock {
                    let type_187: string;
                    export { type_187 as type };
                }
                export namespace preferredSecuritiesOutsideStockEquity {
                    let type_188: string;
                    export { type_188 as type };
                }
                export namespace derivativeProductLiabilities {
                    let type_189: string;
                    export { type_189 as type };
                }
                export namespace employeeBenefits {
                    let type_190: string;
                    export { type_190 as type };
                }
                export namespace nonCurrentPensionAndOtherPostretirementBenefitPlans {
                    let type_191: string;
                    export { type_191 as type };
                }
                export namespace nonCurrentAccruedExpenses {
                    let type_192: string;
                    export { type_192 as type };
                }
                export namespace duetoRelatedPartiesNonCurrent {
                    let type_193: string;
                    export { type_193 as type };
                }
                export namespace tradeandOtherPayablesNonCurrent {
                    let type_194: string;
                    export { type_194 as type };
                }
                export namespace nonCurrentDeferredLiabilities {
                    let type_195: string;
                    export { type_195 as type };
                }
                export namespace nonCurrentDeferredRevenue {
                    let type_196: string;
                    export { type_196 as type };
                }
                export namespace nonCurrentDeferredTaxesLiabilities {
                    let type_197: string;
                    export { type_197 as type };
                }
                export namespace longTermDebtAndCapitalLeaseObligation {
                    let type_198: string;
                    export { type_198 as type };
                }
                export namespace longTermCapitalLeaseObligation {
                    let type_199: string;
                    export { type_199 as type };
                }
                export namespace longTermDebt {
                    let type_200: string;
                    export { type_200 as type };
                }
                export namespace longTermProvisions {
                    let type_201: string;
                    export { type_201 as type };
                }
                export namespace currentLiabilities {
                    let type_202: string;
                    export { type_202 as type };
                }
                export namespace otherCurrentLiabilities {
                    let type_203: string;
                    export { type_203 as type };
                }
                export namespace currentDeferredLiabilities {
                    let type_204: string;
                    export { type_204 as type };
                }
                export namespace currentDeferredRevenue {
                    let type_205: string;
                    export { type_205 as type };
                }
                export namespace currentDeferredTaxesLiabilities {
                    let type_206: string;
                    export { type_206 as type };
                }
                export namespace currentDebtAndCapitalLeaseObligation {
                    let type_207: string;
                    export { type_207 as type };
                }
                export namespace currentCapitalLeaseObligation {
                    let type_208: string;
                    export { type_208 as type };
                }
                export namespace currentDebt {
                    let type_209: string;
                    export { type_209 as type };
                }
                export namespace otherCurrentBorrowings {
                    let type_210: string;
                    export { type_210 as type };
                }
                export namespace lineOfCredit {
                    let type_211: string;
                    export { type_211 as type };
                }
                export namespace commercialPaper {
                    let type_212: string;
                    export { type_212 as type };
                }
                export namespace currentNotesPayable {
                    let type_213: string;
                    export { type_213 as type };
                }
                export namespace pensionandOtherPostRetirementBenefitPlansCurrent {
                    let type_214: string;
                    export { type_214 as type };
                }
                export namespace currentProvisions {
                    let type_215: string;
                    export { type_215 as type };
                }
                export namespace payablesAndAccruedExpenses {
                    let type_216: string;
                    export { type_216 as type };
                }
                export namespace currentAccruedExpenses {
                    let type_217: string;
                    export { type_217 as type };
                }
                export namespace interestPayable {
                    let type_218: string;
                    export { type_218 as type };
                }
                export namespace payables {
                    let type_219: string;
                    export { type_219 as type };
                }
                export namespace otherPayable {
                    let type_220: string;
                    export { type_220 as type };
                }
                export namespace duetoRelatedPartiesCurrent {
                    let type_221: string;
                    export { type_221 as type };
                }
                export namespace dividendsPayable {
                    let type_222: string;
                    export { type_222 as type };
                }
                export namespace totalTaxPayable {
                    let type_223: string;
                    export { type_223 as type };
                }
                export namespace incomeTaxPayable {
                    let type_224: string;
                    export { type_224 as type };
                }
                export namespace accountsPayable {
                    let type_225: string;
                    export { type_225 as type };
                }
                export namespace totalAssets {
                    let type_226: string;
                    export { type_226 as type };
                }
                export namespace totalNonCurrentAssets {
                    let type_227: string;
                    export { type_227 as type };
                }
                export namespace otherNonCurrentAssets {
                    let type_228: string;
                    export { type_228 as type };
                }
                export namespace definedPensionBenefit {
                    let type_229: string;
                    export { type_229 as type };
                }
                export namespace nonCurrentPrepaidAssets {
                    let type_230: string;
                    export { type_230 as type };
                }
                export namespace nonCurrentDeferredAssets {
                    let type_231: string;
                    export { type_231 as type };
                }
                export namespace nonCurrentDeferredTaxesAssets {
                    let type_232: string;
                    export { type_232 as type };
                }
                export namespace duefromRelatedPartiesNonCurrent {
                    let type_233: string;
                    export { type_233 as type };
                }
                export namespace nonCurrentNoteReceivables {
                    let type_234: string;
                    export { type_234 as type };
                }
                export namespace nonCurrentAccountsReceivable {
                    let type_235: string;
                    export { type_235 as type };
                }
                export namespace financialAssets {
                    let type_236: string;
                    export { type_236 as type };
                }
                export namespace investmentsAndAdvances {
                    let type_237: string;
                    export { type_237 as type };
                }
                export namespace otherInvestments {
                    let type_238: string;
                    export { type_238 as type };
                }
                export namespace investmentinFinancialAssets {
                    let type_239: string;
                    export { type_239 as type };
                }
                export namespace heldToMaturitySecurities {
                    let type_240: string;
                    export { type_240 as type };
                }
                export namespace availableForSaleSecurities {
                    let type_241: string;
                    export { type_241 as type };
                }
                export namespace financialAssetsDesignatedasFairValueThroughProfitorLossTotal {
                    let type_242: string;
                    export { type_242 as type };
                }
                export namespace tradingSecurities {
                    let type_243: string;
                    export { type_243 as type };
                }
                export namespace longTermEquityInvestment {
                    let type_244: string;
                    export { type_244 as type };
                }
                export namespace investmentsinJointVenturesatCost {
                    let type_245: string;
                    export { type_245 as type };
                }
                export namespace investmentsInOtherVenturesUnderEquityMethod {
                    let type_246: string;
                    export { type_246 as type };
                }
                export namespace investmentsinAssociatesatCost {
                    let type_247: string;
                    export { type_247 as type };
                }
                export namespace investmentsinSubsidiariesatCost {
                    let type_248: string;
                    export { type_248 as type };
                }
                export namespace investmentProperties {
                    let type_249: string;
                    export { type_249 as type };
                }
                export namespace goodwillAndOtherIntangibleAssets {
                    let type_250: string;
                    export { type_250 as type };
                }
                export namespace otherIntangibleAssets {
                    let type_251: string;
                    export { type_251 as type };
                }
                export namespace goodwill {
                    let type_252: string;
                    export { type_252 as type };
                }
                export namespace netPPE {
                    let type_253: string;
                    export { type_253 as type };
                }
                export namespace accumulatedDepreciation {
                    let type_254: string;
                    export { type_254 as type };
                }
                export namespace grossPPE {
                    let type_255: string;
                    export { type_255 as type };
                }
                export namespace leases {
                    let type_256: string;
                    export { type_256 as type };
                }
                export namespace constructionInProgress {
                    let type_257: string;
                    export { type_257 as type };
                }
                export namespace otherProperties {
                    let type_258: string;
                    export { type_258 as type };
                }
                export namespace machineryFurnitureEquipment {
                    let type_259: string;
                    export { type_259 as type };
                }
                export namespace buildingsAndImprovements {
                    let type_260: string;
                    export { type_260 as type };
                }
                export namespace landAndImprovements {
                    let type_261: string;
                    export { type_261 as type };
                }
                export namespace properties_2 {
                    let type_262: string;
                    export { type_262 as type };
                }
                export { properties_2 as properties };
                export namespace currentAssets {
                    let type_263: string;
                    export { type_263 as type };
                }
                export namespace otherCurrentAssets {
                    let type_264: string;
                    export { type_264 as type };
                }
                export namespace hedgingAssetsCurrent {
                    let type_265: string;
                    export { type_265 as type };
                }
                export namespace assetsHeldForSaleCurrent {
                    let type_266: string;
                    export { type_266 as type };
                }
                export namespace currentDeferredAssets {
                    let type_267: string;
                    export { type_267 as type };
                }
                export namespace currentDeferredTaxesAssets {
                    let type_268: string;
                    export { type_268 as type };
                }
                export namespace restrictedCash {
                    let type_269: string;
                    export { type_269 as type };
                }
                export namespace prepaidAssets {
                    let type_270: string;
                    export { type_270 as type };
                }
                export namespace inventory {
                    let type_271: string;
                    export { type_271 as type };
                }
                export namespace inventoriesAdjustmentsAllowances {
                    let type_272: string;
                    export { type_272 as type };
                }
                export namespace otherInventories {
                    let type_273: string;
                    export { type_273 as type };
                }
                export namespace finishedGoods {
                    let type_274: string;
                    export { type_274 as type };
                }
                export namespace workInProcess {
                    let type_275: string;
                    export { type_275 as type };
                }
                export namespace rawMaterials {
                    let type_276: string;
                    export { type_276 as type };
                }
                export namespace receivables {
                    let type_277: string;
                    export { type_277 as type };
                }
                export namespace receivablesAdjustmentsAllowances {
                    let type_278: string;
                    export { type_278 as type };
                }
                export namespace otherReceivables {
                    let type_279: string;
                    export { type_279 as type };
                }
                export namespace duefromRelatedPartiesCurrent {
                    let type_280: string;
                    export { type_280 as type };
                }
                export namespace taxesReceivable {
                    let type_281: string;
                    export { type_281 as type };
                }
                export namespace accruedInterestReceivable {
                    let type_282: string;
                    export { type_282 as type };
                }
                export namespace notesReceivable {
                    let type_283: string;
                    export { type_283 as type };
                }
                export namespace loansReceivable {
                    let type_284: string;
                    export { type_284 as type };
                }
                export namespace accountsReceivable {
                    let type_285: string;
                    export { type_285 as type };
                }
                export namespace allowanceForDoubtfulAccountsReceivable {
                    let type_286: string;
                    export { type_286 as type };
                }
                export namespace grossAccountsReceivable {
                    let type_287: string;
                    export { type_287 as type };
                }
                export namespace cashCashEquivalentsAndShortTermInvestments {
                    let type_288: string;
                    export { type_288 as type };
                }
                export namespace otherShortTermInvestments {
                    let type_289: string;
                    export { type_289 as type };
                }
                export namespace cashAndCashEquivalents {
                    let type_290: string;
                    export { type_290 as type };
                }
                export namespace cashEquivalents {
                    let type_291: string;
                    export { type_291 as type };
                }
                export namespace cashFinancial {
                    let type_292: string;
                    export { type_292 as type };
                }
                export namespace otherLiabilities {
                    let type_293: string;
                    export { type_293 as type };
                }
                export namespace liabilitiesOfDiscontinuedOperations {
                    let type_294: string;
                    export { type_294 as type };
                }
                export namespace subordinatedLiabilities {
                    let type_295: string;
                    export { type_295 as type };
                }
                export namespace advanceFromFederalHomeLoanBanks {
                    let type_296: string;
                    export { type_296 as type };
                }
                export namespace tradingLiabilities {
                    let type_297: string;
                    export { type_297 as type };
                }
                export namespace duetoRelatedParties {
                    let type_298: string;
                    export { type_298 as type };
                }
                export namespace securitiesLoaned {
                    let type_299: string;
                    export { type_299 as type };
                }
                export namespace federalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchase {
                    let type_300: string;
                    export { type_300 as type };
                }
                export namespace financialInstrumentsSoldUnderAgreementsToRepurchase {
                    let type_301: string;
                    export { type_301 as type };
                }
                export namespace federalFundsPurchased {
                    let type_302: string;
                    export { type_302 as type };
                }
                export namespace totalDeposits {
                    let type_303: string;
                    export { type_303 as type };
                }
                export namespace nonInterestBearingDeposits {
                    let type_304: string;
                    export { type_304 as type };
                }
                export namespace interestBearingDepositsLiabilities {
                    let type_305: string;
                    export { type_305 as type };
                }
                export namespace customerAccounts {
                    let type_306: string;
                    export { type_306 as type };
                }
                export namespace depositsbyBank {
                    let type_307: string;
                    export { type_307 as type };
                }
                export namespace otherAssets {
                    let type_308: string;
                    export { type_308 as type };
                }
                export namespace assetsHeldForSale {
                    let type_309: string;
                    export { type_309 as type };
                }
                export namespace deferredAssets {
                    let type_310: string;
                    export { type_310 as type };
                }
                export namespace deferredTaxAssets {
                    let type_311: string;
                    export { type_311 as type };
                }
                export namespace dueFromRelatedParties {
                    let type_312: string;
                    export { type_312 as type };
                }
                export namespace allowanceForNotesReceivable {
                    let type_313: string;
                    export { type_313 as type };
                }
                export namespace grossNotesReceivable {
                    let type_314: string;
                    export { type_314 as type };
                }
                export namespace netLoan {
                    let type_315: string;
                    export { type_315 as type };
                }
                export namespace unearnedIncome {
                    let type_316: string;
                    export { type_316 as type };
                }
                export namespace allowanceForLoansAndLeaseLosses {
                    let type_317: string;
                    export { type_317 as type };
                }
                export namespace grossLoan {
                    let type_318: string;
                    export { type_318 as type };
                }
                export namespace otherLoanAssets {
                    let type_319: string;
                    export { type_319 as type };
                }
                export namespace mortgageLoan {
                    let type_320: string;
                    export { type_320 as type };
                }
                export namespace consumerLoan {
                    let type_321: string;
                    export { type_321 as type };
                }
                export namespace commercialLoan {
                    let type_322: string;
                    export { type_322 as type };
                }
                export namespace loansHeldForSale {
                    let type_323: string;
                    export { type_323 as type };
                }
                export namespace derivativeAssets {
                    let type_324: string;
                    export { type_324 as type };
                }
                export namespace securitiesAndInvestments {
                    let type_325: string;
                    export { type_325 as type };
                }
                export namespace bankOwnedLifeInsurance {
                    let type_326: string;
                    export { type_326 as type };
                }
                export namespace otherRealEstateOwned {
                    let type_327: string;
                    export { type_327 as type };
                }
                export namespace foreclosedAssets {
                    let type_328: string;
                    export { type_328 as type };
                }
                export namespace customerAcceptances {
                    let type_329: string;
                    export { type_329 as type };
                }
                export namespace federalHomeLoanBankStock {
                    let type_330: string;
                    export { type_330 as type };
                }
                export namespace securityBorrowed {
                    let type_331: string;
                    export { type_331 as type };
                }
                export namespace cashCashEquivalentsAndFederalFundsSold {
                    let type_332: string;
                    export { type_332 as type };
                }
                export namespace moneyMarketInvestments {
                    let type_333: string;
                    export { type_333 as type };
                }
                export namespace federalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell {
                    let type_334: string;
                    export { type_334 as type };
                }
                export namespace securityAgreeToBeResell {
                    let type_335: string;
                    export { type_335 as type };
                }
                export namespace federalFundsSold {
                    let type_336: string;
                    export { type_336 as type };
                }
                export namespace restrictedCashAndInvestments {
                    let type_337: string;
                    export { type_337 as type };
                }
                export namespace restrictedInvestments {
                    let type_338: string;
                    export { type_338 as type };
                }
                export namespace restrictedCashAndCashEquivalents {
                    let type_339: string;
                    export { type_339 as type };
                }
                export namespace interestBearingDepositsAssets {
                    let type_340: string;
                    export { type_340 as type };
                }
                export namespace cashAndDueFromBanks {
                    let type_341: string;
                    export { type_341 as type };
                }
                export namespace bankIndebtedness {
                    let type_342: string;
                    export { type_342 as type };
                }
                export namespace mineralProperties {
                    let type_343: string;
                    export { type_343 as type };
                }
                export namespace netPPEPurchaseAndSale {
                    let type_344: string;
                    export { type_344 as type };
                }
                export namespace purchaseOfInvestment {
                    let type_345: string;
                    export { type_345 as type };
                }
                export namespace investingCashFlow {
                    let type_346: string;
                    export { type_346 as type };
                }
                export namespace grossProfit_1 {
                    let type_347: string;
                    export { type_347 as type };
                }
                export { grossProfit_1 as grossProfit };
                export namespace cashFlowFromContinuingOperatingActivities {
                    let type_348: string;
                    export { type_348 as type };
                }
                export namespace endCashPosition {
                    let type_349: string;
                    export { type_349 as type };
                }
                export namespace netIncomeCommonStockholders_1 {
                    let type_350: string;
                    export { type_350 as type };
                }
                export { netIncomeCommonStockholders_1 as netIncomeCommonStockholders };
                export namespace changeInAccountPayable {
                    let type_351: string;
                    export { type_351 as type };
                }
                export namespace otherNonCashItems {
                    let type_352: string;
                    export { type_352 as type };
                }
                export namespace cashDividendsPaid {
                    let type_353: string;
                    export { type_353 as type };
                }
                export namespace dilutedAverageShares_1 {
                    let type_354: string;
                    export { type_354 as type };
                }
                export { dilutedAverageShares_1 as dilutedAverageShares };
                export namespace repurchaseOfCapitalStock {
                    let type_355: string;
                    export { type_355 as type };
                }
                export namespace EBITDA_1 {
                    let type_356: string;
                    export { type_356 as type };
                }
                export { EBITDA_1 as EBITDA };
                export namespace stockBasedCompensation {
                    let type_357: string;
                    export { type_357 as type };
                }
                export namespace commonStockDividendPaid {
                    let type_358: string;
                    export { type_358 as type };
                }
                export namespace changeInPayable {
                    let type_359: string;
                    export { type_359 as type };
                }
                export namespace costOfRevenue_1 {
                    let type_360: string;
                    export { type_360 as type };
                }
                export { costOfRevenue_1 as costOfRevenue };
                export namespace operatingExpense_1 {
                    let type_361: string;
                    export { type_361 as type };
                }
                export { operatingExpense_1 as operatingExpense };
                export namespace changeInInventory {
                    let type_362: string;
                    export { type_362 as type };
                }
                export namespace normalizedIncome_1 {
                    let type_363: string;
                    export { type_363 as type };
                }
                export { normalizedIncome_1 as normalizedIncome };
                export namespace netIncomeIncludingNoncontrollingInterests_1 {
                    let type_364: string;
                    export { type_364 as type };
                }
                export { netIncomeIncludingNoncontrollingInterests_1 as netIncomeIncludingNoncontrollingInterests };
                export namespace netIncomeFromContinuingOperationNetMinorityInterest_1 {
                    let type_365: string;
                    export { type_365 as type };
                }
                export { netIncomeFromContinuingOperationNetMinorityInterest_1 as netIncomeFromContinuingOperationNetMinorityInterest };
                export namespace reconciledCostOfRevenue_1 {
                    let type_366: string;
                    export { type_366 as type };
                }
                export { reconciledCostOfRevenue_1 as reconciledCostOfRevenue };
                export namespace otherIncomeExpense_1 {
                    let type_367: string;
                    export { type_367 as type };
                }
                export { otherIncomeExpense_1 as otherIncomeExpense };
                export namespace netInvestmentPurchaseAndSale {
                    let type_368: string;
                    export { type_368 as type };
                }
                export namespace purchaseOfPPE {
                    let type_369: string;
                    export { type_369 as type };
                }
                export namespace taxProvision_1 {
                    let type_370: string;
                    export { type_370 as type };
                }
                export { taxProvision_1 as taxProvision };
                export namespace pretaxIncome_1 {
                    let type_371: string;
                    export { type_371 as type };
                }
                export { pretaxIncome_1 as pretaxIncome };
                export namespace researchAndDevelopment_1 {
                    let type_372: string;
                    export { type_372 as type };
                }
                export { researchAndDevelopment_1 as researchAndDevelopment };
                export namespace longTermDebtPayments {
                    let type_373: string;
                    export { type_373 as type };
                }
                export namespace changeInReceivables {
                    let type_374: string;
                    export { type_374 as type };
                }
                export namespace dilutedEPS_1 {
                    let type_375: string;
                    export { type_375 as type };
                }
                export { dilutedEPS_1 as dilutedEPS };
                export namespace netIssuancePaymentsOfDebt {
                    let type_376: string;
                    export { type_376 as type };
                }
                export namespace netShortTermDebtIssuance {
                    let type_377: string;
                    export { type_377 as type };
                }
                export namespace depreciationAndAmortization {
                    let type_378: string;
                    export { type_378 as type };
                }
                export namespace cashFlowFromContinuingInvestingActivities {
                    let type_379: string;
                    export { type_379 as type };
                }
                export namespace beginningCashPosition {
                    let type_380: string;
                    export { type_380 as type };
                }
                export namespace changesInCash {
                    let type_381: string;
                    export { type_381 as type };
                }
                export namespace financingCashFlow {
                    let type_382: string;
                    export { type_382 as type };
                }
                export namespace changeInOtherCurrentLiabilities {
                    let type_383: string;
                    export { type_383 as type };
                }
                export namespace changeInWorkingCapital {
                    let type_384: string;
                    export { type_384 as type };
                }
                export namespace operatingIncome_1 {
                    let type_385: string;
                    export { type_385 as type };
                }
                export { operatingIncome_1 as operatingIncome };
                export namespace totalRevenue_1 {
                    let type_386: string;
                    export { type_386 as type };
                }
                export { totalRevenue_1 as totalRevenue };
                export namespace netIncomeFromContinuingAndDiscontinuedOperation_1 {
                    let type_387: string;
                    export { type_387 as type };
                }
                export { netIncomeFromContinuingAndDiscontinuedOperation_1 as netIncomeFromContinuingAndDiscontinuedOperation };
                export namespace operatingRevenue_1 {
                    let type_388: string;
                    export { type_388 as type };
                }
                export { operatingRevenue_1 as operatingRevenue };
                export namespace changeInPayablesAndAccruedExpense {
                    let type_389: string;
                    export { type_389 as type };
                }
                export namespace netCommonStockIssuance {
                    let type_390: string;
                    export { type_390 as type };
                }
                export namespace commonStockPayments {
                    let type_391: string;
                    export { type_391 as type };
                }
                export namespace EBIT_1 {
                    let type_392: string;
                    export { type_392 as type };
                }
                export { EBIT_1 as EBIT };
                export namespace netOtherInvestingChanges {
                    let type_393: string;
                    export { type_393 as type };
                }
                export namespace basicEPS_1 {
                    let type_394: string;
                    export { type_394 as type };
                }
                export { basicEPS_1 as basicEPS };
                export namespace shortTermDebtPayments {
                    let type_395: string;
                    export { type_395 as type };
                }
                export namespace sellingGeneralAndAdministration_1 {
                    let type_396: string;
                    export { type_396 as type };
                }
                export { sellingGeneralAndAdministration_1 as sellingGeneralAndAdministration };
                export namespace netIncomeContinuousOperations_1 {
                    let type_397: string;
                    export { type_397 as type };
                }
                export { netIncomeContinuousOperations_1 as netIncomeContinuousOperations };
                export namespace repaymentOfDebt {
                    let type_398: string;
                    export { type_398 as type };
                }
                export namespace totalOperatingIncomeAsReported_1 {
                    let type_399: string;
                    export { type_399 as type };
                }
                export { totalOperatingIncomeAsReported_1 as totalOperatingIncomeAsReported };
                export namespace normalizedEBITDA_1 {
                    let type_400: string;
                    export { type_400 as type };
                }
                export { normalizedEBITDA_1 as normalizedEBITDA };
                export namespace capitalExpenditure {
                    let type_401: string;
                    export { type_401 as type };
                }
                export namespace cashFlowFromContinuingFinancingActivities {
                    let type_402: string;
                    export { type_402 as type };
                }
                export namespace netIncome_1 {
                    let type_403: string;
                    export { type_403 as type };
                }
                export { netIncome_1 as netIncome };
                export namespace netOtherFinancingCharges {
                    let type_404: string;
                    export { type_404 as type };
                }
                export namespace basicAverageShares_1 {
                    let type_405: string;
                    export { type_405 as type };
                }
                export { basicAverageShares_1 as basicAverageShares };
                export namespace netLongTermDebtIssuance {
                    let type_406: string;
                    export { type_406 as type };
                }
                export namespace depreciationAmortizationDepletion {
                    let type_407: string;
                    export { type_407 as type };
                }
                export namespace operatingCashFlow {
                    let type_408: string;
                    export { type_408 as type };
                }
                export namespace dilutedNIAvailtoComStockholders_1 {
                    let type_409: string;
                    export { type_409 as type };
                }
                export { dilutedNIAvailtoComStockholders_1 as dilutedNIAvailtoComStockholders };
                export namespace netIncomeFromContinuingOperations {
                    let type_410: string;
                    export { type_410 as type };
                }
                export namespace taxRateForCalcs_1 {
                    let type_411: string;
                    export { type_411 as type };
                }
                export { taxRateForCalcs_1 as taxRateForCalcs };
                export namespace freeCashFlow {
                    let type_412: string;
                    export { type_412 as type };
                }
                export namespace otherNonOperatingIncomeExpenses_1 {
                    let type_413: string;
                    export { type_413 as type };
                }
                export { otherNonOperatingIncomeExpenses_1 as otherNonOperatingIncomeExpenses };
                export namespace changesInAccountReceivables {
                    let type_414: string;
                    export { type_414 as type };
                }
                export namespace totalExpenses_1 {
                    let type_415: string;
                    export { type_415 as type };
                }
                export { totalExpenses_1 as totalExpenses };
                export namespace changeInOtherCurrentAssets {
                    let type_416: string;
                    export { type_416 as type };
                }
                export namespace reconciledDepreciation_1 {
                    let type_417: string;
                    export { type_417 as type };
                }
                export { reconciledDepreciation_1 as reconciledDepreciation };
                export namespace incomeTaxPaidSupplementalData {
                    let type_418: string;
                    export { type_418 as type };
                }
                export namespace saleOfInvestment {
                    let type_419: string;
                    export { type_419 as type };
                }
                export namespace interestPaidSupplementalData {
                    let type_420: string;
                    export { type_420 as type };
                }
                export namespace deferredTax {
                    let type_421: string;
                    export { type_421 as type };
                }
                export namespace changeInOtherWorkingCapital {
                    let type_422: string;
                    export { type_422 as type };
                }
                export namespace interestIncomeNonOperating_1 {
                    let type_423: string;
                    export { type_423 as type };
                }
                export { interestIncomeNonOperating_1 as interestIncomeNonOperating };
                export namespace issuanceOfDebt {
                    let type_424: string;
                    export { type_424 as type };
                }
                export namespace purchaseOfBusiness {
                    let type_425: string;
                    export { type_425 as type };
                }
                export namespace longTermDebtIssuance {
                    let type_426: string;
                    export { type_426 as type };
                }
                export namespace interestIncome_1 {
                    let type_427: string;
                    export { type_427 as type };
                }
                export { interestIncome_1 as interestIncome };
                export namespace netInterestIncome_1 {
                    let type_428: string;
                    export { type_428 as type };
                }
                export { netInterestIncome_1 as netInterestIncome };
                export namespace deferredIncomeTax {
                    let type_429: string;
                    export { type_429 as type };
                }
                export namespace interestExpense_1 {
                    let type_430: string;
                    export { type_430 as type };
                }
                export { interestExpense_1 as interestExpense };
                export namespace netNonOperatingInterestIncomeExpense_1 {
                    let type_431: string;
                    export { type_431 as type };
                }
                export { netNonOperatingInterestIncomeExpense_1 as netNonOperatingInterestIncomeExpense };
                export namespace interestExpenseNonOperating_1 {
                    let type_432: string;
                    export { type_432 as type };
                }
                export { interestExpenseNonOperating_1 as interestExpenseNonOperating };
                export namespace netBusinessPurchaseAndSale {
                    let type_433: string;
                    export { type_433 as type };
                }
            }
            export { properties_1 as properties };
            let required_1: string[];
            export { required_1 as required };
            let additionalProperties_1: boolean;
            export { additionalProperties_1 as additionalProperties };
        }
        namespace FundamentalsTimeSeriesCashFlowResult {
            let type_434: string;
            export { type_434 as type };
            export namespace properties_3 {
                export namespace date_2 {
                    let type_435: string;
                    export { type_435 as type };
                    let format_2: string;
                    export { format_2 as format };
                }
                export { date_2 as date };
                export namespace TYPE_2 {
                    let type_436: string;
                    export { type_436 as type };
                    let _const_2: string;
                    export { _const_2 as const };
                }
                export { TYPE_2 as TYPE };
                export namespace periodType_2 {
                    let $ref_2: string;
                    export { $ref_2 as $ref };
                }
                export { periodType_2 as periodType };
                export namespace freeCashFlow_1 {
                    let type_437: string;
                    export { type_437 as type };
                }
                export { freeCashFlow_1 as freeCashFlow };
                export namespace foreignSales {
                    let type_438: string;
                    export { type_438 as type };
                }
                export namespace domesticSales {
                    let type_439: string;
                    export { type_439 as type };
                }
                export namespace adjustedGeographySegmentData {
                    let type_440: string;
                    export { type_440 as type };
                }
                export namespace repurchaseOfCapitalStock_1 {
                    let type_441: string;
                    export { type_441 as type };
                }
                export { repurchaseOfCapitalStock_1 as repurchaseOfCapitalStock };
                export namespace repaymentOfDebt_1 {
                    let type_442: string;
                    export { type_442 as type };
                }
                export { repaymentOfDebt_1 as repaymentOfDebt };
                export namespace issuanceOfDebt_1 {
                    let type_443: string;
                    export { type_443 as type };
                }
                export { issuanceOfDebt_1 as issuanceOfDebt };
                export namespace issuanceOfCapitalStock {
                    let type_444: string;
                    export { type_444 as type };
                }
                export namespace capitalExpenditure_1 {
                    let type_445: string;
                    export { type_445 as type };
                }
                export { capitalExpenditure_1 as capitalExpenditure };
                export namespace interestPaidSupplementalData_1 {
                    let type_446: string;
                    export { type_446 as type };
                }
                export { interestPaidSupplementalData_1 as interestPaidSupplementalData };
                export namespace incomeTaxPaidSupplementalData_1 {
                    let type_447: string;
                    export { type_447 as type };
                }
                export { incomeTaxPaidSupplementalData_1 as incomeTaxPaidSupplementalData };
                export namespace endCashPosition_1 {
                    let type_448: string;
                    export { type_448 as type };
                }
                export { endCashPosition_1 as endCashPosition };
                export namespace otherCashAdjustmentOutsideChangeinCash {
                    let type_449: string;
                    export { type_449 as type };
                }
                export namespace beginningCashPosition_1 {
                    let type_450: string;
                    export { type_450 as type };
                }
                export { beginningCashPosition_1 as beginningCashPosition };
                export namespace effectOfExchangeRateChanges {
                    let type_451: string;
                    export { type_451 as type };
                }
                export namespace changesInCash_1 {
                    let type_452: string;
                    export { type_452 as type };
                }
                export { changesInCash_1 as changesInCash };
                export namespace otherCashAdjustmentInsideChangeinCash {
                    let type_453: string;
                    export { type_453 as type };
                }
                export namespace cashFlowFromDiscontinuedOperation {
                    let type_454: string;
                    export { type_454 as type };
                }
                export namespace financingCashFlow_1 {
                    let type_455: string;
                    export { type_455 as type };
                }
                export { financingCashFlow_1 as financingCashFlow };
                export namespace cashFromDiscontinuedFinancingActivities {
                    let type_456: string;
                    export { type_456 as type };
                }
                export namespace cashFlowFromContinuingFinancingActivities_1 {
                    let type_457: string;
                    export { type_457 as type };
                }
                export { cashFlowFromContinuingFinancingActivities_1 as cashFlowFromContinuingFinancingActivities };
                export namespace netOtherFinancingCharges_1 {
                    let type_458: string;
                    export { type_458 as type };
                }
                export { netOtherFinancingCharges_1 as netOtherFinancingCharges };
                export namespace interestPaidCFF {
                    let type_459: string;
                    export { type_459 as type };
                }
                export namespace proceedsFromStockOptionExercised {
                    let type_460: string;
                    export { type_460 as type };
                }
                export namespace cashDividendsPaid_1 {
                    let type_461: string;
                    export { type_461 as type };
                }
                export { cashDividendsPaid_1 as cashDividendsPaid };
                export namespace preferredStockDividendPaid {
                    let type_462: string;
                    export { type_462 as type };
                }
                export namespace commonStockDividendPaid_1 {
                    let type_463: string;
                    export { type_463 as type };
                }
                export { commonStockDividendPaid_1 as commonStockDividendPaid };
                export namespace netPreferredStockIssuance {
                    let type_464: string;
                    export { type_464 as type };
                }
                export namespace preferredStockPayments {
                    let type_465: string;
                    export { type_465 as type };
                }
                export namespace preferredStockIssuance {
                    let type_466: string;
                    export { type_466 as type };
                }
                export namespace netCommonStockIssuance_1 {
                    let type_467: string;
                    export { type_467 as type };
                }
                export { netCommonStockIssuance_1 as netCommonStockIssuance };
                export namespace commonStockPayments_1 {
                    let type_468: string;
                    export { type_468 as type };
                }
                export { commonStockPayments_1 as commonStockPayments };
                export namespace commonStockIssuance {
                    let type_469: string;
                    export { type_469 as type };
                }
                export namespace netIssuancePaymentsOfDebt_1 {
                    let type_470: string;
                    export { type_470 as type };
                }
                export { netIssuancePaymentsOfDebt_1 as netIssuancePaymentsOfDebt };
                export namespace netShortTermDebtIssuance_1 {
                    let type_471: string;
                    export { type_471 as type };
                }
                export { netShortTermDebtIssuance_1 as netShortTermDebtIssuance };
                export namespace shortTermDebtPayments_1 {
                    let type_472: string;
                    export { type_472 as type };
                }
                export { shortTermDebtPayments_1 as shortTermDebtPayments };
                export namespace shortTermDebtIssuance {
                    let type_473: string;
                    export { type_473 as type };
                }
                export namespace netLongTermDebtIssuance_1 {
                    let type_474: string;
                    export { type_474 as type };
                }
                export { netLongTermDebtIssuance_1 as netLongTermDebtIssuance };
                export namespace longTermDebtPayments_1 {
                    let type_475: string;
                    export { type_475 as type };
                }
                export { longTermDebtPayments_1 as longTermDebtPayments };
                export namespace longTermDebtIssuance_1 {
                    let type_476: string;
                    export { type_476 as type };
                }
                export { longTermDebtIssuance_1 as longTermDebtIssuance };
                export namespace investingCashFlow_1 {
                    let type_477: string;
                    export { type_477 as type };
                }
                export { investingCashFlow_1 as investingCashFlow };
                export namespace cashFromDiscontinuedInvestingActivities {
                    let type_478: string;
                    export { type_478 as type };
                }
                export namespace cashFlowFromContinuingInvestingActivities_1 {
                    let type_479: string;
                    export { type_479 as type };
                }
                export { cashFlowFromContinuingInvestingActivities_1 as cashFlowFromContinuingInvestingActivities };
                export namespace netOtherInvestingChanges_1 {
                    let type_480: string;
                    export { type_480 as type };
                }
                export { netOtherInvestingChanges_1 as netOtherInvestingChanges };
                export namespace interestReceivedCFI {
                    let type_481: string;
                    export { type_481 as type };
                }
                export namespace dividendsReceivedCFI {
                    let type_482: string;
                    export { type_482 as type };
                }
                export namespace netInvestmentPurchaseAndSale_1 {
                    let type_483: string;
                    export { type_483 as type };
                }
                export { netInvestmentPurchaseAndSale_1 as netInvestmentPurchaseAndSale };
                export namespace saleOfInvestment_1 {
                    let type_484: string;
                    export { type_484 as type };
                }
                export { saleOfInvestment_1 as saleOfInvestment };
                export namespace purchaseOfInvestment_1 {
                    let type_485: string;
                    export { type_485 as type };
                }
                export { purchaseOfInvestment_1 as purchaseOfInvestment };
                export namespace netInvestmentPropertiesPurchaseAndSale {
                    let type_486: string;
                    export { type_486 as type };
                }
                export namespace saleOfInvestmentProperties {
                    let type_487: string;
                    export { type_487 as type };
                }
                export namespace purchaseOfInvestmentProperties {
                    let type_488: string;
                    export { type_488 as type };
                }
                export namespace netBusinessPurchaseAndSale_1 {
                    let type_489: string;
                    export { type_489 as type };
                }
                export { netBusinessPurchaseAndSale_1 as netBusinessPurchaseAndSale };
                export namespace saleOfBusiness {
                    let type_490: string;
                    export { type_490 as type };
                }
                export namespace purchaseOfBusiness_1 {
                    let type_491: string;
                    export { type_491 as type };
                }
                export { purchaseOfBusiness_1 as purchaseOfBusiness };
                export namespace netIntangiblesPurchaseAndSale {
                    let type_492: string;
                    export { type_492 as type };
                }
                export namespace saleOfIntangibles {
                    let type_493: string;
                    export { type_493 as type };
                }
                export namespace purchaseOfIntangibles {
                    let type_494: string;
                    export { type_494 as type };
                }
                export namespace netPPEPurchaseAndSale_1 {
                    let type_495: string;
                    export { type_495 as type };
                }
                export { netPPEPurchaseAndSale_1 as netPPEPurchaseAndSale };
                export namespace saleOfPPE {
                    let type_496: string;
                    export { type_496 as type };
                }
                export namespace purchaseOfPPE_1 {
                    let type_497: string;
                    export { type_497 as type };
                }
                export { purchaseOfPPE_1 as purchaseOfPPE };
                export namespace capitalExpenditureReported {
                    let type_498: string;
                    export { type_498 as type };
                }
                export namespace operatingCashFlow_1 {
                    let type_499: string;
                    export { type_499 as type };
                }
                export { operatingCashFlow_1 as operatingCashFlow };
                export namespace cashFromDiscontinuedOperatingActivities {
                    let type_500: string;
                    export { type_500 as type };
                }
                export namespace cashFlowFromContinuingOperatingActivities_1 {
                    let type_501: string;
                    export { type_501 as type };
                }
                export { cashFlowFromContinuingOperatingActivities_1 as cashFlowFromContinuingOperatingActivities };
                export namespace taxesRefundPaid {
                    let type_502: string;
                    export { type_502 as type };
                }
                export namespace interestReceivedCFO {
                    let type_503: string;
                    export { type_503 as type };
                }
                export namespace interestPaidCFO {
                    let type_504: string;
                    export { type_504 as type };
                }
                export namespace dividendReceivedCFO {
                    let type_505: string;
                    export { type_505 as type };
                }
                export namespace dividendPaidCFO {
                    let type_506: string;
                    export { type_506 as type };
                }
                export namespace changeInWorkingCapital_1 {
                    let type_507: string;
                    export { type_507 as type };
                }
                export { changeInWorkingCapital_1 as changeInWorkingCapital };
                export namespace changeInOtherWorkingCapital_1 {
                    let type_508: string;
                    export { type_508 as type };
                }
                export { changeInOtherWorkingCapital_1 as changeInOtherWorkingCapital };
                export namespace changeInOtherCurrentLiabilities_1 {
                    let type_509: string;
                    export { type_509 as type };
                }
                export { changeInOtherCurrentLiabilities_1 as changeInOtherCurrentLiabilities };
                export namespace changeInOtherCurrentAssets_1 {
                    let type_510: string;
                    export { type_510 as type };
                }
                export { changeInOtherCurrentAssets_1 as changeInOtherCurrentAssets };
                export namespace changeInPayablesAndAccruedExpense_1 {
                    let type_511: string;
                    export { type_511 as type };
                }
                export { changeInPayablesAndAccruedExpense_1 as changeInPayablesAndAccruedExpense };
                export namespace changeInAccruedExpense {
                    let type_512: string;
                    export { type_512 as type };
                }
                export namespace changeInInterestPayable {
                    let type_513: string;
                    export { type_513 as type };
                }
                export namespace changeInPayable_1 {
                    let type_514: string;
                    export { type_514 as type };
                }
                export { changeInPayable_1 as changeInPayable };
                export namespace changeInDividendPayable {
                    let type_515: string;
                    export { type_515 as type };
                }
                export namespace changeInAccountPayable_1 {
                    let type_516: string;
                    export { type_516 as type };
                }
                export { changeInAccountPayable_1 as changeInAccountPayable };
                export namespace changeInTaxPayable {
                    let type_517: string;
                    export { type_517 as type };
                }
                export namespace changeInIncomeTaxPayable {
                    let type_518: string;
                    export { type_518 as type };
                }
                export namespace changeInPrepaidAssets {
                    let type_519: string;
                    export { type_519 as type };
                }
                export namespace changeInInventory_1 {
                    let type_520: string;
                    export { type_520 as type };
                }
                export { changeInInventory_1 as changeInInventory };
                export namespace changeInReceivables_1 {
                    let type_521: string;
                    export { type_521 as type };
                }
                export { changeInReceivables_1 as changeInReceivables };
                export namespace changesInAccountReceivables_1 {
                    let type_522: string;
                    export { type_522 as type };
                }
                export { changesInAccountReceivables_1 as changesInAccountReceivables };
                export namespace otherNonCashItems_1 {
                    let type_523: string;
                    export { type_523 as type };
                }
                export { otherNonCashItems_1 as otherNonCashItems };
                export namespace excessTaxBenefitFromStockBasedCompensation {
                    let type_524: string;
                    export { type_524 as type };
                }
                export namespace stockBasedCompensation_1 {
                    let type_525: string;
                    export { type_525 as type };
                }
                export { stockBasedCompensation_1 as stockBasedCompensation };
                export namespace unrealizedGainLossOnInvestmentSecurities {
                    let type_526: string;
                    export { type_526 as type };
                }
                export namespace provisionandWriteOffofAssets {
                    let type_527: string;
                    export { type_527 as type };
                }
                export namespace assetImpairmentCharge {
                    let type_528: string;
                    export { type_528 as type };
                }
                export namespace amortizationOfSecurities {
                    let type_529: string;
                    export { type_529 as type };
                }
                export namespace deferredTax_1 {
                    let type_530: string;
                    export { type_530 as type };
                }
                export { deferredTax_1 as deferredTax };
                export namespace deferredIncomeTax_1 {
                    let type_531: string;
                    export { type_531 as type };
                }
                export { deferredIncomeTax_1 as deferredIncomeTax };
                export namespace depletion {
                    let type_532: string;
                    export { type_532 as type };
                }
                export namespace depreciationAndAmortization_1 {
                    let type_533: string;
                    export { type_533 as type };
                }
                export { depreciationAndAmortization_1 as depreciationAndAmortization };
                export namespace amortizationCashFlow {
                    let type_534: string;
                    export { type_534 as type };
                }
                export namespace amortizationOfIntangibles {
                    let type_535: string;
                    export { type_535 as type };
                }
                export namespace depreciation {
                    let type_536: string;
                    export { type_536 as type };
                }
                export namespace operatingGainsLosses {
                    let type_537: string;
                    export { type_537 as type };
                }
                export namespace pensionAndEmployeeBenefitExpense {
                    let type_538: string;
                    export { type_538 as type };
                }
                export namespace earningsLossesFromEquityInvestments {
                    let type_539: string;
                    export { type_539 as type };
                }
                export namespace gainLossOnInvestmentSecurities {
                    let type_540: string;
                    export { type_540 as type };
                }
                export namespace netForeignCurrencyExchangeGainLoss {
                    let type_541: string;
                    export { type_541 as type };
                }
                export namespace gainLossOnSaleOfPPE {
                    let type_542: string;
                    export { type_542 as type };
                }
                export namespace gainLossOnSaleOfBusiness {
                    let type_543: string;
                    export { type_543 as type };
                }
                export namespace netIncomeFromContinuingOperations_1 {
                    let type_544: string;
                    export { type_544 as type };
                }
                export { netIncomeFromContinuingOperations_1 as netIncomeFromContinuingOperations };
                export namespace cashFlowsfromusedinOperatingActivitiesDirect {
                    let type_545: string;
                    export { type_545 as type };
                }
                export namespace taxesRefundPaidDirect {
                    let type_546: string;
                    export { type_546 as type };
                }
                export namespace interestReceivedDirect {
                    let type_547: string;
                    export { type_547 as type };
                }
                export namespace interestPaidDirect {
                    let type_548: string;
                    export { type_548 as type };
                }
                export namespace dividendsReceivedDirect {
                    let type_549: string;
                    export { type_549 as type };
                }
                export namespace dividendsPaidDirect {
                    let type_550: string;
                    export { type_550 as type };
                }
                export namespace classesofCashPayments {
                    let type_551: string;
                    export { type_551 as type };
                }
                export namespace otherCashPaymentsfromOperatingActivities {
                    let type_552: string;
                    export { type_552 as type };
                }
                export namespace paymentsonBehalfofEmployees {
                    let type_553: string;
                    export { type_553 as type };
                }
                export namespace paymentstoSuppliersforGoodsandServices {
                    let type_554: string;
                    export { type_554 as type };
                }
                export namespace classesofCashReceiptsfromOperatingActivities {
                    let type_555: string;
                    export { type_555 as type };
                }
                export namespace otherCashReceiptsfromOperatingActivities {
                    let type_556: string;
                    export { type_556 as type };
                }
                export namespace receiptsfromGovernmentGrants {
                    let type_557: string;
                    export { type_557 as type };
                }
                export namespace receiptsfromCustomers {
                    let type_558: string;
                    export { type_558 as type };
                }
                export namespace increaseDecreaseInDeposit {
                    let type_559: string;
                    export { type_559 as type };
                }
                export namespace changeInFederalFundsAndSecuritiesSoldForRepurchase {
                    let type_560: string;
                    export { type_560 as type };
                }
                export namespace netProceedsPaymentForLoan {
                    let type_561: string;
                    export { type_561 as type };
                }
                export namespace paymentForLoans {
                    let type_562: string;
                    export { type_562 as type };
                }
                export namespace proceedsFromLoans {
                    let type_563: string;
                    export { type_563 as type };
                }
                export namespace proceedsPaymentInInterestBearingDepositsInBank {
                    let type_564: string;
                    export { type_564 as type };
                }
                export namespace increaseinInterestBearingDepositsinBank {
                    let type_565: string;
                    export { type_565 as type };
                }
                export namespace decreaseinInterestBearingDepositsinBank {
                    let type_566: string;
                    export { type_566 as type };
                }
                export namespace proceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResell {
                    let type_567: string;
                    export { type_567 as type };
                }
                export namespace changeInLoans {
                    let type_568: string;
                    export { type_568 as type };
                }
                export namespace changeInDeferredCharges {
                    let type_569: string;
                    export { type_569 as type };
                }
                export namespace provisionForLoanLeaseAndOtherLosses {
                    let type_570: string;
                    export { type_570 as type };
                }
                export namespace amortizationOfFinancingCostsAndDiscounts {
                    let type_571: string;
                    export { type_571 as type };
                }
                export namespace depreciationAmortizationDepletion_1 {
                    let type_572: string;
                    export { type_572 as type };
                }
                export { depreciationAmortizationDepletion_1 as depreciationAmortizationDepletion };
                export namespace realizedGainLossOnSaleOfLoansAndLease {
                    let type_573: string;
                    export { type_573 as type };
                }
                export namespace allTaxesPaid {
                    let type_574: string;
                    export { type_574 as type };
                }
                export namespace interestandCommissionPaid {
                    let type_575: string;
                    export { type_575 as type };
                }
                export namespace cashPaymentsforLoans {
                    let type_576: string;
                    export { type_576 as type };
                }
                export namespace cashPaymentsforDepositsbyBanksandCustomers {
                    let type_577: string;
                    export { type_577 as type };
                }
                export namespace cashReceiptsfromFeesandCommissions {
                    let type_578: string;
                    export { type_578 as type };
                }
                export namespace cashReceiptsfromSecuritiesRelatedActivities {
                    let type_579: string;
                    export { type_579 as type };
                }
                export namespace cashReceiptsfromLoans {
                    let type_580: string;
                    export { type_580 as type };
                }
                export namespace cashReceiptsfromDepositsbyBanksandCustomers {
                    let type_581: string;
                    export { type_581 as type };
                }
                export namespace cashReceiptsfromTaxRefunds {
                    let type_582: string;
                    export { type_582 as type };
                }
                export namespace AmortizationAmortizationCashFlow {
                    let type_583: string;
                    export { type_583 as type };
                }
            }
            export { properties_3 as properties };
            let required_2: string[];
            export { required_2 as required };
            let additionalProperties_2: boolean;
            export { additionalProperties_2 as additionalProperties };
        }
        namespace FundamentalsTimeSeriesAllResult {
            let type_584: string;
            export { type_584 as type };
            let additionalProperties_3: boolean;
            export { additionalProperties_3 as additionalProperties };
            export namespace properties_4 {
                export namespace TYPE_3 {
                    let type_585: string;
                    export { type_585 as type };
                    let _const_3: string;
                    export { _const_3 as const };
                }
                export { TYPE_3 as TYPE };
                export namespace date_3 {
                    let type_586: string;
                    export { type_586 as type };
                    let format_3: string;
                    export { format_3 as format };
                }
                export { date_3 as date };
                export namespace periodType_3 {
                    let $ref_3: string;
                    export { $ref_3 as $ref };
                }
                export { periodType_3 as periodType };
                export namespace freeCashFlow_2 {
                    let type_587: string;
                    export { type_587 as type };
                }
                export { freeCashFlow_2 as freeCashFlow };
                export namespace foreignSales_1 {
                    let type_588: string;
                    export { type_588 as type };
                }
                export { foreignSales_1 as foreignSales };
                export namespace domesticSales_1 {
                    let type_589: string;
                    export { type_589 as type };
                }
                export { domesticSales_1 as domesticSales };
                export namespace adjustedGeographySegmentData_1 {
                    let type_590: string;
                    export { type_590 as type };
                }
                export { adjustedGeographySegmentData_1 as adjustedGeographySegmentData };
                export namespace repurchaseOfCapitalStock_2 {
                    let type_591: string;
                    export { type_591 as type };
                }
                export { repurchaseOfCapitalStock_2 as repurchaseOfCapitalStock };
                export namespace repaymentOfDebt_2 {
                    let type_592: string;
                    export { type_592 as type };
                }
                export { repaymentOfDebt_2 as repaymentOfDebt };
                export namespace issuanceOfDebt_2 {
                    let type_593: string;
                    export { type_593 as type };
                }
                export { issuanceOfDebt_2 as issuanceOfDebt };
                export namespace issuanceOfCapitalStock_1 {
                    let type_594: string;
                    export { type_594 as type };
                }
                export { issuanceOfCapitalStock_1 as issuanceOfCapitalStock };
                export namespace capitalExpenditure_2 {
                    let type_595: string;
                    export { type_595 as type };
                }
                export { capitalExpenditure_2 as capitalExpenditure };
                export namespace interestPaidSupplementalData_2 {
                    let type_596: string;
                    export { type_596 as type };
                }
                export { interestPaidSupplementalData_2 as interestPaidSupplementalData };
                export namespace incomeTaxPaidSupplementalData_2 {
                    let type_597: string;
                    export { type_597 as type };
                }
                export { incomeTaxPaidSupplementalData_2 as incomeTaxPaidSupplementalData };
                export namespace endCashPosition_2 {
                    let type_598: string;
                    export { type_598 as type };
                }
                export { endCashPosition_2 as endCashPosition };
                export namespace otherCashAdjustmentOutsideChangeinCash_1 {
                    let type_599: string;
                    export { type_599 as type };
                }
                export { otherCashAdjustmentOutsideChangeinCash_1 as otherCashAdjustmentOutsideChangeinCash };
                export namespace beginningCashPosition_2 {
                    let type_600: string;
                    export { type_600 as type };
                }
                export { beginningCashPosition_2 as beginningCashPosition };
                export namespace effectOfExchangeRateChanges_1 {
                    let type_601: string;
                    export { type_601 as type };
                }
                export { effectOfExchangeRateChanges_1 as effectOfExchangeRateChanges };
                export namespace changesInCash_2 {
                    let type_602: string;
                    export { type_602 as type };
                }
                export { changesInCash_2 as changesInCash };
                export namespace otherCashAdjustmentInsideChangeinCash_1 {
                    let type_603: string;
                    export { type_603 as type };
                }
                export { otherCashAdjustmentInsideChangeinCash_1 as otherCashAdjustmentInsideChangeinCash };
                export namespace cashFlowFromDiscontinuedOperation_1 {
                    let type_604: string;
                    export { type_604 as type };
                }
                export { cashFlowFromDiscontinuedOperation_1 as cashFlowFromDiscontinuedOperation };
                export namespace financingCashFlow_2 {
                    let type_605: string;
                    export { type_605 as type };
                }
                export { financingCashFlow_2 as financingCashFlow };
                export namespace cashFromDiscontinuedFinancingActivities_1 {
                    let type_606: string;
                    export { type_606 as type };
                }
                export { cashFromDiscontinuedFinancingActivities_1 as cashFromDiscontinuedFinancingActivities };
                export namespace cashFlowFromContinuingFinancingActivities_2 {
                    let type_607: string;
                    export { type_607 as type };
                }
                export { cashFlowFromContinuingFinancingActivities_2 as cashFlowFromContinuingFinancingActivities };
                export namespace netOtherFinancingCharges_2 {
                    let type_608: string;
                    export { type_608 as type };
                }
                export { netOtherFinancingCharges_2 as netOtherFinancingCharges };
                export namespace interestPaidCFF_1 {
                    let type_609: string;
                    export { type_609 as type };
                }
                export { interestPaidCFF_1 as interestPaidCFF };
                export namespace proceedsFromStockOptionExercised_1 {
                    let type_610: string;
                    export { type_610 as type };
                }
                export { proceedsFromStockOptionExercised_1 as proceedsFromStockOptionExercised };
                export namespace cashDividendsPaid_2 {
                    let type_611: string;
                    export { type_611 as type };
                }
                export { cashDividendsPaid_2 as cashDividendsPaid };
                export namespace preferredStockDividendPaid_1 {
                    let type_612: string;
                    export { type_612 as type };
                }
                export { preferredStockDividendPaid_1 as preferredStockDividendPaid };
                export namespace commonStockDividendPaid_2 {
                    let type_613: string;
                    export { type_613 as type };
                }
                export { commonStockDividendPaid_2 as commonStockDividendPaid };
                export namespace netPreferredStockIssuance_1 {
                    let type_614: string;
                    export { type_614 as type };
                }
                export { netPreferredStockIssuance_1 as netPreferredStockIssuance };
                export namespace preferredStockPayments_1 {
                    let type_615: string;
                    export { type_615 as type };
                }
                export { preferredStockPayments_1 as preferredStockPayments };
                export namespace preferredStockIssuance_1 {
                    let type_616: string;
                    export { type_616 as type };
                }
                export { preferredStockIssuance_1 as preferredStockIssuance };
                export namespace netCommonStockIssuance_2 {
                    let type_617: string;
                    export { type_617 as type };
                }
                export { netCommonStockIssuance_2 as netCommonStockIssuance };
                export namespace commonStockPayments_2 {
                    let type_618: string;
                    export { type_618 as type };
                }
                export { commonStockPayments_2 as commonStockPayments };
                export namespace commonStockIssuance_1 {
                    let type_619: string;
                    export { type_619 as type };
                }
                export { commonStockIssuance_1 as commonStockIssuance };
                export namespace netIssuancePaymentsOfDebt_2 {
                    let type_620: string;
                    export { type_620 as type };
                }
                export { netIssuancePaymentsOfDebt_2 as netIssuancePaymentsOfDebt };
                export namespace netShortTermDebtIssuance_2 {
                    let type_621: string;
                    export { type_621 as type };
                }
                export { netShortTermDebtIssuance_2 as netShortTermDebtIssuance };
                export namespace shortTermDebtPayments_2 {
                    let type_622: string;
                    export { type_622 as type };
                }
                export { shortTermDebtPayments_2 as shortTermDebtPayments };
                export namespace shortTermDebtIssuance_1 {
                    let type_623: string;
                    export { type_623 as type };
                }
                export { shortTermDebtIssuance_1 as shortTermDebtIssuance };
                export namespace netLongTermDebtIssuance_2 {
                    let type_624: string;
                    export { type_624 as type };
                }
                export { netLongTermDebtIssuance_2 as netLongTermDebtIssuance };
                export namespace longTermDebtPayments_2 {
                    let type_625: string;
                    export { type_625 as type };
                }
                export { longTermDebtPayments_2 as longTermDebtPayments };
                export namespace longTermDebtIssuance_2 {
                    let type_626: string;
                    export { type_626 as type };
                }
                export { longTermDebtIssuance_2 as longTermDebtIssuance };
                export namespace investingCashFlow_2 {
                    let type_627: string;
                    export { type_627 as type };
                }
                export { investingCashFlow_2 as investingCashFlow };
                export namespace cashFromDiscontinuedInvestingActivities_1 {
                    let type_628: string;
                    export { type_628 as type };
                }
                export { cashFromDiscontinuedInvestingActivities_1 as cashFromDiscontinuedInvestingActivities };
                export namespace cashFlowFromContinuingInvestingActivities_2 {
                    let type_629: string;
                    export { type_629 as type };
                }
                export { cashFlowFromContinuingInvestingActivities_2 as cashFlowFromContinuingInvestingActivities };
                export namespace netOtherInvestingChanges_2 {
                    let type_630: string;
                    export { type_630 as type };
                }
                export { netOtherInvestingChanges_2 as netOtherInvestingChanges };
                export namespace interestReceivedCFI_1 {
                    let type_631: string;
                    export { type_631 as type };
                }
                export { interestReceivedCFI_1 as interestReceivedCFI };
                export namespace dividendsReceivedCFI_1 {
                    let type_632: string;
                    export { type_632 as type };
                }
                export { dividendsReceivedCFI_1 as dividendsReceivedCFI };
                export namespace netInvestmentPurchaseAndSale_2 {
                    let type_633: string;
                    export { type_633 as type };
                }
                export { netInvestmentPurchaseAndSale_2 as netInvestmentPurchaseAndSale };
                export namespace saleOfInvestment_2 {
                    let type_634: string;
                    export { type_634 as type };
                }
                export { saleOfInvestment_2 as saleOfInvestment };
                export namespace purchaseOfInvestment_2 {
                    let type_635: string;
                    export { type_635 as type };
                }
                export { purchaseOfInvestment_2 as purchaseOfInvestment };
                export namespace netInvestmentPropertiesPurchaseAndSale_1 {
                    let type_636: string;
                    export { type_636 as type };
                }
                export { netInvestmentPropertiesPurchaseAndSale_1 as netInvestmentPropertiesPurchaseAndSale };
                export namespace saleOfInvestmentProperties_1 {
                    let type_637: string;
                    export { type_637 as type };
                }
                export { saleOfInvestmentProperties_1 as saleOfInvestmentProperties };
                export namespace purchaseOfInvestmentProperties_1 {
                    let type_638: string;
                    export { type_638 as type };
                }
                export { purchaseOfInvestmentProperties_1 as purchaseOfInvestmentProperties };
                export namespace netBusinessPurchaseAndSale_2 {
                    let type_639: string;
                    export { type_639 as type };
                }
                export { netBusinessPurchaseAndSale_2 as netBusinessPurchaseAndSale };
                export namespace saleOfBusiness_1 {
                    let type_640: string;
                    export { type_640 as type };
                }
                export { saleOfBusiness_1 as saleOfBusiness };
                export namespace purchaseOfBusiness_2 {
                    let type_641: string;
                    export { type_641 as type };
                }
                export { purchaseOfBusiness_2 as purchaseOfBusiness };
                export namespace netIntangiblesPurchaseAndSale_1 {
                    let type_642: string;
                    export { type_642 as type };
                }
                export { netIntangiblesPurchaseAndSale_1 as netIntangiblesPurchaseAndSale };
                export namespace saleOfIntangibles_1 {
                    let type_643: string;
                    export { type_643 as type };
                }
                export { saleOfIntangibles_1 as saleOfIntangibles };
                export namespace purchaseOfIntangibles_1 {
                    let type_644: string;
                    export { type_644 as type };
                }
                export { purchaseOfIntangibles_1 as purchaseOfIntangibles };
                export namespace netPPEPurchaseAndSale_2 {
                    let type_645: string;
                    export { type_645 as type };
                }
                export { netPPEPurchaseAndSale_2 as netPPEPurchaseAndSale };
                export namespace saleOfPPE_1 {
                    let type_646: string;
                    export { type_646 as type };
                }
                export { saleOfPPE_1 as saleOfPPE };
                export namespace purchaseOfPPE_2 {
                    let type_647: string;
                    export { type_647 as type };
                }
                export { purchaseOfPPE_2 as purchaseOfPPE };
                export namespace capitalExpenditureReported_1 {
                    let type_648: string;
                    export { type_648 as type };
                }
                export { capitalExpenditureReported_1 as capitalExpenditureReported };
                export namespace operatingCashFlow_2 {
                    let type_649: string;
                    export { type_649 as type };
                }
                export { operatingCashFlow_2 as operatingCashFlow };
                export namespace cashFromDiscontinuedOperatingActivities_1 {
                    let type_650: string;
                    export { type_650 as type };
                }
                export { cashFromDiscontinuedOperatingActivities_1 as cashFromDiscontinuedOperatingActivities };
                export namespace cashFlowFromContinuingOperatingActivities_2 {
                    let type_651: string;
                    export { type_651 as type };
                }
                export { cashFlowFromContinuingOperatingActivities_2 as cashFlowFromContinuingOperatingActivities };
                export namespace taxesRefundPaid_1 {
                    let type_652: string;
                    export { type_652 as type };
                }
                export { taxesRefundPaid_1 as taxesRefundPaid };
                export namespace interestReceivedCFO_1 {
                    let type_653: string;
                    export { type_653 as type };
                }
                export { interestReceivedCFO_1 as interestReceivedCFO };
                export namespace interestPaidCFO_1 {
                    let type_654: string;
                    export { type_654 as type };
                }
                export { interestPaidCFO_1 as interestPaidCFO };
                export namespace dividendReceivedCFO_1 {
                    let type_655: string;
                    export { type_655 as type };
                }
                export { dividendReceivedCFO_1 as dividendReceivedCFO };
                export namespace dividendPaidCFO_1 {
                    let type_656: string;
                    export { type_656 as type };
                }
                export { dividendPaidCFO_1 as dividendPaidCFO };
                export namespace changeInWorkingCapital_2 {
                    let type_657: string;
                    export { type_657 as type };
                }
                export { changeInWorkingCapital_2 as changeInWorkingCapital };
                export namespace changeInOtherWorkingCapital_2 {
                    let type_658: string;
                    export { type_658 as type };
                }
                export { changeInOtherWorkingCapital_2 as changeInOtherWorkingCapital };
                export namespace changeInOtherCurrentLiabilities_2 {
                    let type_659: string;
                    export { type_659 as type };
                }
                export { changeInOtherCurrentLiabilities_2 as changeInOtherCurrentLiabilities };
                export namespace changeInOtherCurrentAssets_2 {
                    let type_660: string;
                    export { type_660 as type };
                }
                export { changeInOtherCurrentAssets_2 as changeInOtherCurrentAssets };
                export namespace changeInPayablesAndAccruedExpense_2 {
                    let type_661: string;
                    export { type_661 as type };
                }
                export { changeInPayablesAndAccruedExpense_2 as changeInPayablesAndAccruedExpense };
                export namespace changeInAccruedExpense_1 {
                    let type_662: string;
                    export { type_662 as type };
                }
                export { changeInAccruedExpense_1 as changeInAccruedExpense };
                export namespace changeInInterestPayable_1 {
                    let type_663: string;
                    export { type_663 as type };
                }
                export { changeInInterestPayable_1 as changeInInterestPayable };
                export namespace changeInPayable_2 {
                    let type_664: string;
                    export { type_664 as type };
                }
                export { changeInPayable_2 as changeInPayable };
                export namespace changeInDividendPayable_1 {
                    let type_665: string;
                    export { type_665 as type };
                }
                export { changeInDividendPayable_1 as changeInDividendPayable };
                export namespace changeInAccountPayable_2 {
                    let type_666: string;
                    export { type_666 as type };
                }
                export { changeInAccountPayable_2 as changeInAccountPayable };
                export namespace changeInTaxPayable_1 {
                    let type_667: string;
                    export { type_667 as type };
                }
                export { changeInTaxPayable_1 as changeInTaxPayable };
                export namespace changeInIncomeTaxPayable_1 {
                    let type_668: string;
                    export { type_668 as type };
                }
                export { changeInIncomeTaxPayable_1 as changeInIncomeTaxPayable };
                export namespace changeInPrepaidAssets_1 {
                    let type_669: string;
                    export { type_669 as type };
                }
                export { changeInPrepaidAssets_1 as changeInPrepaidAssets };
                export namespace changeInInventory_2 {
                    let type_670: string;
                    export { type_670 as type };
                }
                export { changeInInventory_2 as changeInInventory };
                export namespace changeInReceivables_2 {
                    let type_671: string;
                    export { type_671 as type };
                }
                export { changeInReceivables_2 as changeInReceivables };
                export namespace changesInAccountReceivables_2 {
                    let type_672: string;
                    export { type_672 as type };
                }
                export { changesInAccountReceivables_2 as changesInAccountReceivables };
                export namespace otherNonCashItems_2 {
                    let type_673: string;
                    export { type_673 as type };
                }
                export { otherNonCashItems_2 as otherNonCashItems };
                export namespace excessTaxBenefitFromStockBasedCompensation_1 {
                    let type_674: string;
                    export { type_674 as type };
                }
                export { excessTaxBenefitFromStockBasedCompensation_1 as excessTaxBenefitFromStockBasedCompensation };
                export namespace stockBasedCompensation_2 {
                    let type_675: string;
                    export { type_675 as type };
                }
                export { stockBasedCompensation_2 as stockBasedCompensation };
                export namespace unrealizedGainLossOnInvestmentSecurities_1 {
                    let type_676: string;
                    export { type_676 as type };
                }
                export { unrealizedGainLossOnInvestmentSecurities_1 as unrealizedGainLossOnInvestmentSecurities };
                export namespace provisionandWriteOffofAssets_1 {
                    let type_677: string;
                    export { type_677 as type };
                }
                export { provisionandWriteOffofAssets_1 as provisionandWriteOffofAssets };
                export namespace assetImpairmentCharge_1 {
                    let type_678: string;
                    export { type_678 as type };
                }
                export { assetImpairmentCharge_1 as assetImpairmentCharge };
                export namespace amortizationOfSecurities_1 {
                    let type_679: string;
                    export { type_679 as type };
                }
                export { amortizationOfSecurities_1 as amortizationOfSecurities };
                export namespace deferredTax_2 {
                    let type_680: string;
                    export { type_680 as type };
                }
                export { deferredTax_2 as deferredTax };
                export namespace deferredIncomeTax_2 {
                    let type_681: string;
                    export { type_681 as type };
                }
                export { deferredIncomeTax_2 as deferredIncomeTax };
                export namespace depletion_1 {
                    let type_682: string;
                    export { type_682 as type };
                }
                export { depletion_1 as depletion };
                export namespace depreciationAndAmortization_2 {
                    let type_683: string;
                    export { type_683 as type };
                }
                export { depreciationAndAmortization_2 as depreciationAndAmortization };
                export namespace amortizationCashFlow_1 {
                    let type_684: string;
                    export { type_684 as type };
                }
                export { amortizationCashFlow_1 as amortizationCashFlow };
                export namespace amortizationOfIntangibles_1 {
                    let type_685: string;
                    export { type_685 as type };
                }
                export { amortizationOfIntangibles_1 as amortizationOfIntangibles };
                export namespace depreciation_1 {
                    let type_686: string;
                    export { type_686 as type };
                }
                export { depreciation_1 as depreciation };
                export namespace operatingGainsLosses_1 {
                    let type_687: string;
                    export { type_687 as type };
                }
                export { operatingGainsLosses_1 as operatingGainsLosses };
                export namespace pensionAndEmployeeBenefitExpense_1 {
                    let type_688: string;
                    export { type_688 as type };
                }
                export { pensionAndEmployeeBenefitExpense_1 as pensionAndEmployeeBenefitExpense };
                export namespace earningsLossesFromEquityInvestments_1 {
                    let type_689: string;
                    export { type_689 as type };
                }
                export { earningsLossesFromEquityInvestments_1 as earningsLossesFromEquityInvestments };
                export namespace gainLossOnInvestmentSecurities_1 {
                    let type_690: string;
                    export { type_690 as type };
                }
                export { gainLossOnInvestmentSecurities_1 as gainLossOnInvestmentSecurities };
                export namespace netForeignCurrencyExchangeGainLoss_1 {
                    let type_691: string;
                    export { type_691 as type };
                }
                export { netForeignCurrencyExchangeGainLoss_1 as netForeignCurrencyExchangeGainLoss };
                export namespace gainLossOnSaleOfPPE_1 {
                    let type_692: string;
                    export { type_692 as type };
                }
                export { gainLossOnSaleOfPPE_1 as gainLossOnSaleOfPPE };
                export namespace gainLossOnSaleOfBusiness_1 {
                    let type_693: string;
                    export { type_693 as type };
                }
                export { gainLossOnSaleOfBusiness_1 as gainLossOnSaleOfBusiness };
                export namespace netIncomeFromContinuingOperations_2 {
                    let type_694: string;
                    export { type_694 as type };
                }
                export { netIncomeFromContinuingOperations_2 as netIncomeFromContinuingOperations };
                export namespace cashFlowsfromusedinOperatingActivitiesDirect_1 {
                    let type_695: string;
                    export { type_695 as type };
                }
                export { cashFlowsfromusedinOperatingActivitiesDirect_1 as cashFlowsfromusedinOperatingActivitiesDirect };
                export namespace taxesRefundPaidDirect_1 {
                    let type_696: string;
                    export { type_696 as type };
                }
                export { taxesRefundPaidDirect_1 as taxesRefundPaidDirect };
                export namespace interestReceivedDirect_1 {
                    let type_697: string;
                    export { type_697 as type };
                }
                export { interestReceivedDirect_1 as interestReceivedDirect };
                export namespace interestPaidDirect_1 {
                    let type_698: string;
                    export { type_698 as type };
                }
                export { interestPaidDirect_1 as interestPaidDirect };
                export namespace dividendsReceivedDirect_1 {
                    let type_699: string;
                    export { type_699 as type };
                }
                export { dividendsReceivedDirect_1 as dividendsReceivedDirect };
                export namespace dividendsPaidDirect_1 {
                    let type_700: string;
                    export { type_700 as type };
                }
                export { dividendsPaidDirect_1 as dividendsPaidDirect };
                export namespace classesofCashPayments_1 {
                    let type_701: string;
                    export { type_701 as type };
                }
                export { classesofCashPayments_1 as classesofCashPayments };
                export namespace otherCashPaymentsfromOperatingActivities_1 {
                    let type_702: string;
                    export { type_702 as type };
                }
                export { otherCashPaymentsfromOperatingActivities_1 as otherCashPaymentsfromOperatingActivities };
                export namespace paymentsonBehalfofEmployees_1 {
                    let type_703: string;
                    export { type_703 as type };
                }
                export { paymentsonBehalfofEmployees_1 as paymentsonBehalfofEmployees };
                export namespace paymentstoSuppliersforGoodsandServices_1 {
                    let type_704: string;
                    export { type_704 as type };
                }
                export { paymentstoSuppliersforGoodsandServices_1 as paymentstoSuppliersforGoodsandServices };
                export namespace classesofCashReceiptsfromOperatingActivities_1 {
                    let type_705: string;
                    export { type_705 as type };
                }
                export { classesofCashReceiptsfromOperatingActivities_1 as classesofCashReceiptsfromOperatingActivities };
                export namespace otherCashReceiptsfromOperatingActivities_1 {
                    let type_706: string;
                    export { type_706 as type };
                }
                export { otherCashReceiptsfromOperatingActivities_1 as otherCashReceiptsfromOperatingActivities };
                export namespace receiptsfromGovernmentGrants_1 {
                    let type_707: string;
                    export { type_707 as type };
                }
                export { receiptsfromGovernmentGrants_1 as receiptsfromGovernmentGrants };
                export namespace receiptsfromCustomers_1 {
                    let type_708: string;
                    export { type_708 as type };
                }
                export { receiptsfromCustomers_1 as receiptsfromCustomers };
                export namespace increaseDecreaseInDeposit_1 {
                    let type_709: string;
                    export { type_709 as type };
                }
                export { increaseDecreaseInDeposit_1 as increaseDecreaseInDeposit };
                export namespace changeInFederalFundsAndSecuritiesSoldForRepurchase_1 {
                    let type_710: string;
                    export { type_710 as type };
                }
                export { changeInFederalFundsAndSecuritiesSoldForRepurchase_1 as changeInFederalFundsAndSecuritiesSoldForRepurchase };
                export namespace netProceedsPaymentForLoan_1 {
                    let type_711: string;
                    export { type_711 as type };
                }
                export { netProceedsPaymentForLoan_1 as netProceedsPaymentForLoan };
                export namespace paymentForLoans_1 {
                    let type_712: string;
                    export { type_712 as type };
                }
                export { paymentForLoans_1 as paymentForLoans };
                export namespace proceedsFromLoans_1 {
                    let type_713: string;
                    export { type_713 as type };
                }
                export { proceedsFromLoans_1 as proceedsFromLoans };
                export namespace proceedsPaymentInInterestBearingDepositsInBank_1 {
                    let type_714: string;
                    export { type_714 as type };
                }
                export { proceedsPaymentInInterestBearingDepositsInBank_1 as proceedsPaymentInInterestBearingDepositsInBank };
                export namespace increaseinInterestBearingDepositsinBank_1 {
                    let type_715: string;
                    export { type_715 as type };
                }
                export { increaseinInterestBearingDepositsinBank_1 as increaseinInterestBearingDepositsinBank };
                export namespace decreaseinInterestBearingDepositsinBank_1 {
                    let type_716: string;
                    export { type_716 as type };
                }
                export { decreaseinInterestBearingDepositsinBank_1 as decreaseinInterestBearingDepositsinBank };
                export namespace proceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResell_1 {
                    let type_717: string;
                    export { type_717 as type };
                }
                export { proceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResell_1 as proceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResell };
                export namespace changeInLoans_1 {
                    let type_718: string;
                    export { type_718 as type };
                }
                export { changeInLoans_1 as changeInLoans };
                export namespace changeInDeferredCharges_1 {
                    let type_719: string;
                    export { type_719 as type };
                }
                export { changeInDeferredCharges_1 as changeInDeferredCharges };
                export namespace provisionForLoanLeaseAndOtherLosses_1 {
                    let type_720: string;
                    export { type_720 as type };
                }
                export { provisionForLoanLeaseAndOtherLosses_1 as provisionForLoanLeaseAndOtherLosses };
                export namespace amortizationOfFinancingCostsAndDiscounts_1 {
                    let type_721: string;
                    export { type_721 as type };
                }
                export { amortizationOfFinancingCostsAndDiscounts_1 as amortizationOfFinancingCostsAndDiscounts };
                export namespace depreciationAmortizationDepletion_2 {
                    let type_722: string;
                    export { type_722 as type };
                }
                export { depreciationAmortizationDepletion_2 as depreciationAmortizationDepletion };
                export namespace realizedGainLossOnSaleOfLoansAndLease_1 {
                    let type_723: string;
                    export { type_723 as type };
                }
                export { realizedGainLossOnSaleOfLoansAndLease_1 as realizedGainLossOnSaleOfLoansAndLease };
                export namespace allTaxesPaid_1 {
                    let type_724: string;
                    export { type_724 as type };
                }
                export { allTaxesPaid_1 as allTaxesPaid };
                export namespace interestandCommissionPaid_1 {
                    let type_725: string;
                    export { type_725 as type };
                }
                export { interestandCommissionPaid_1 as interestandCommissionPaid };
                export namespace cashPaymentsforLoans_1 {
                    let type_726: string;
                    export { type_726 as type };
                }
                export { cashPaymentsforLoans_1 as cashPaymentsforLoans };
                export namespace cashPaymentsforDepositsbyBanksandCustomers_1 {
                    let type_727: string;
                    export { type_727 as type };
                }
                export { cashPaymentsforDepositsbyBanksandCustomers_1 as cashPaymentsforDepositsbyBanksandCustomers };
                export namespace cashReceiptsfromFeesandCommissions_1 {
                    let type_728: string;
                    export { type_728 as type };
                }
                export { cashReceiptsfromFeesandCommissions_1 as cashReceiptsfromFeesandCommissions };
                export namespace cashReceiptsfromSecuritiesRelatedActivities_1 {
                    let type_729: string;
                    export { type_729 as type };
                }
                export { cashReceiptsfromSecuritiesRelatedActivities_1 as cashReceiptsfromSecuritiesRelatedActivities };
                export namespace cashReceiptsfromLoans_1 {
                    let type_730: string;
                    export { type_730 as type };
                }
                export { cashReceiptsfromLoans_1 as cashReceiptsfromLoans };
                export namespace cashReceiptsfromDepositsbyBanksandCustomers_1 {
                    let type_731: string;
                    export { type_731 as type };
                }
                export { cashReceiptsfromDepositsbyBanksandCustomers_1 as cashReceiptsfromDepositsbyBanksandCustomers };
                export namespace cashReceiptsfromTaxRefunds_1 {
                    let type_732: string;
                    export { type_732 as type };
                }
                export { cashReceiptsfromTaxRefunds_1 as cashReceiptsfromTaxRefunds };
                export namespace AmortizationAmortizationCashFlow_1 {
                    let type_733: string;
                    export { type_733 as type };
                }
                export { AmortizationAmortizationCashFlow_1 as AmortizationAmortizationCashFlow };
                export namespace netDebt_1 {
                    let type_734: string;
                    export { type_734 as type };
                }
                export { netDebt_1 as netDebt };
                export namespace treasurySharesNumber_1 {
                    let type_735: string;
                    export { type_735 as type };
                }
                export { treasurySharesNumber_1 as treasurySharesNumber };
                export namespace preferredSharesNumber_1 {
                    let type_736: string;
                    export { type_736 as type };
                }
                export { preferredSharesNumber_1 as preferredSharesNumber };
                export namespace ordinarySharesNumber_1 {
                    let type_737: string;
                    export { type_737 as type };
                }
                export { ordinarySharesNumber_1 as ordinarySharesNumber };
                export namespace shareIssued_1 {
                    let type_738: string;
                    export { type_738 as type };
                }
                export { shareIssued_1 as shareIssued };
                export namespace totalDebt_1 {
                    let type_739: string;
                    export { type_739 as type };
                }
                export { totalDebt_1 as totalDebt };
                export namespace tangibleBookValue_1 {
                    let type_740: string;
                    export { type_740 as type };
                }
                export { tangibleBookValue_1 as tangibleBookValue };
                export namespace investedCapital_1 {
                    let type_741: string;
                    export { type_741 as type };
                }
                export { investedCapital_1 as investedCapital };
                export namespace workingCapital_1 {
                    let type_742: string;
                    export { type_742 as type };
                }
                export { workingCapital_1 as workingCapital };
                export namespace netTangibleAssets_1 {
                    let type_743: string;
                    export { type_743 as type };
                }
                export { netTangibleAssets_1 as netTangibleAssets };
                export namespace capitalLeaseObligations_1 {
                    let type_744: string;
                    export { type_744 as type };
                }
                export { capitalLeaseObligations_1 as capitalLeaseObligations };
                export namespace commonStockEquity_1 {
                    let type_745: string;
                    export { type_745 as type };
                }
                export { commonStockEquity_1 as commonStockEquity };
                export namespace preferredStockEquity_1 {
                    let type_746: string;
                    export { type_746 as type };
                }
                export { preferredStockEquity_1 as preferredStockEquity };
                export namespace totalCapitalization_1 {
                    let type_747: string;
                    export { type_747 as type };
                }
                export { totalCapitalization_1 as totalCapitalization };
                export namespace totalEquityGrossMinorityInterest_1 {
                    let type_748: string;
                    export { type_748 as type };
                }
                export { totalEquityGrossMinorityInterest_1 as totalEquityGrossMinorityInterest };
                export namespace minorityInterest_1 {
                    let type_749: string;
                    export { type_749 as type };
                }
                export { minorityInterest_1 as minorityInterest };
                export namespace stockholdersEquity_1 {
                    let type_750: string;
                    export { type_750 as type };
                }
                export { stockholdersEquity_1 as stockholdersEquity };
                export namespace otherEquityInterest_1 {
                    let type_751: string;
                    export { type_751 as type };
                }
                export { otherEquityInterest_1 as otherEquityInterest };
                export namespace gainsLossesNotAffectingRetainedEarnings_1 {
                    let type_752: string;
                    export { type_752 as type };
                }
                export { gainsLossesNotAffectingRetainedEarnings_1 as gainsLossesNotAffectingRetainedEarnings };
                export namespace otherEquityAdjustments_1 {
                    let type_753: string;
                    export { type_753 as type };
                }
                export { otherEquityAdjustments_1 as otherEquityAdjustments };
                export namespace fixedAssetsRevaluationReserve_1 {
                    let type_754: string;
                    export { type_754 as type };
                }
                export { fixedAssetsRevaluationReserve_1 as fixedAssetsRevaluationReserve };
                export namespace foreignCurrencyTranslationAdjustments_1 {
                    let type_755: string;
                    export { type_755 as type };
                }
                export { foreignCurrencyTranslationAdjustments_1 as foreignCurrencyTranslationAdjustments };
                export namespace minimumPensionLiabilities_1 {
                    let type_756: string;
                    export { type_756 as type };
                }
                export { minimumPensionLiabilities_1 as minimumPensionLiabilities };
                export namespace unrealizedGainLoss_1 {
                    let type_757: string;
                    export { type_757 as type };
                }
                export { unrealizedGainLoss_1 as unrealizedGainLoss };
                export namespace treasuryStock_1 {
                    let type_758: string;
                    export { type_758 as type };
                }
                export { treasuryStock_1 as treasuryStock };
                export namespace retainedEarnings_1 {
                    let type_759: string;
                    export { type_759 as type };
                }
                export { retainedEarnings_1 as retainedEarnings };
                export namespace additionalPaidInCapital_1 {
                    let type_760: string;
                    export { type_760 as type };
                }
                export { additionalPaidInCapital_1 as additionalPaidInCapital };
                export namespace capitalStock_1 {
                    let type_761: string;
                    export { type_761 as type };
                }
                export { capitalStock_1 as capitalStock };
                export namespace otherCapitalStock_1 {
                    let type_762: string;
                    export { type_762 as type };
                }
                export { otherCapitalStock_1 as otherCapitalStock };
                export namespace commonStock_1 {
                    let type_763: string;
                    export { type_763 as type };
                }
                export { commonStock_1 as commonStock };
                export namespace preferredStock_1 {
                    let type_764: string;
                    export { type_764 as type };
                }
                export { preferredStock_1 as preferredStock };
                export namespace totalPartnershipCapital_1 {
                    let type_765: string;
                    export { type_765 as type };
                }
                export { totalPartnershipCapital_1 as totalPartnershipCapital };
                export namespace generalPartnershipCapital_1 {
                    let type_766: string;
                    export { type_766 as type };
                }
                export { generalPartnershipCapital_1 as generalPartnershipCapital };
                export namespace limitedPartnershipCapital_1 {
                    let type_767: string;
                    export { type_767 as type };
                }
                export { limitedPartnershipCapital_1 as limitedPartnershipCapital };
                export namespace totalLiabilitiesNetMinorityInterest_1 {
                    let type_768: string;
                    export { type_768 as type };
                }
                export { totalLiabilitiesNetMinorityInterest_1 as totalLiabilitiesNetMinorityInterest };
                export namespace totalNonCurrentLiabilitiesNetMinorityInterest_1 {
                    let type_769: string;
                    export { type_769 as type };
                }
                export { totalNonCurrentLiabilitiesNetMinorityInterest_1 as totalNonCurrentLiabilitiesNetMinorityInterest };
                export namespace otherNonCurrentLiabilities_1 {
                    let type_770: string;
                    export { type_770 as type };
                }
                export { otherNonCurrentLiabilities_1 as otherNonCurrentLiabilities };
                export namespace liabilitiesHeldforSaleNonCurrent_1 {
                    let type_771: string;
                    export { type_771 as type };
                }
                export { liabilitiesHeldforSaleNonCurrent_1 as liabilitiesHeldforSaleNonCurrent };
                export namespace restrictedCommonStock_1 {
                    let type_772: string;
                    export { type_772 as type };
                }
                export { restrictedCommonStock_1 as restrictedCommonStock };
                export namespace preferredSecuritiesOutsideStockEquity_1 {
                    let type_773: string;
                    export { type_773 as type };
                }
                export { preferredSecuritiesOutsideStockEquity_1 as preferredSecuritiesOutsideStockEquity };
                export namespace derivativeProductLiabilities_1 {
                    let type_774: string;
                    export { type_774 as type };
                }
                export { derivativeProductLiabilities_1 as derivativeProductLiabilities };
                export namespace employeeBenefits_1 {
                    let type_775: string;
                    export { type_775 as type };
                }
                export { employeeBenefits_1 as employeeBenefits };
                export namespace nonCurrentPensionAndOtherPostretirementBenefitPlans_1 {
                    let type_776: string;
                    export { type_776 as type };
                }
                export { nonCurrentPensionAndOtherPostretirementBenefitPlans_1 as nonCurrentPensionAndOtherPostretirementBenefitPlans };
                export namespace nonCurrentAccruedExpenses_1 {
                    let type_777: string;
                    export { type_777 as type };
                }
                export { nonCurrentAccruedExpenses_1 as nonCurrentAccruedExpenses };
                export namespace duetoRelatedPartiesNonCurrent_1 {
                    let type_778: string;
                    export { type_778 as type };
                }
                export { duetoRelatedPartiesNonCurrent_1 as duetoRelatedPartiesNonCurrent };
                export namespace tradeandOtherPayablesNonCurrent_1 {
                    let type_779: string;
                    export { type_779 as type };
                }
                export { tradeandOtherPayablesNonCurrent_1 as tradeandOtherPayablesNonCurrent };
                export namespace nonCurrentDeferredLiabilities_1 {
                    let type_780: string;
                    export { type_780 as type };
                }
                export { nonCurrentDeferredLiabilities_1 as nonCurrentDeferredLiabilities };
                export namespace nonCurrentDeferredRevenue_1 {
                    let type_781: string;
                    export { type_781 as type };
                }
                export { nonCurrentDeferredRevenue_1 as nonCurrentDeferredRevenue };
                export namespace nonCurrentDeferredTaxesLiabilities_1 {
                    let type_782: string;
                    export { type_782 as type };
                }
                export { nonCurrentDeferredTaxesLiabilities_1 as nonCurrentDeferredTaxesLiabilities };
                export namespace longTermDebtAndCapitalLeaseObligation_1 {
                    let type_783: string;
                    export { type_783 as type };
                }
                export { longTermDebtAndCapitalLeaseObligation_1 as longTermDebtAndCapitalLeaseObligation };
                export namespace longTermCapitalLeaseObligation_1 {
                    let type_784: string;
                    export { type_784 as type };
                }
                export { longTermCapitalLeaseObligation_1 as longTermCapitalLeaseObligation };
                export namespace longTermDebt_1 {
                    let type_785: string;
                    export { type_785 as type };
                }
                export { longTermDebt_1 as longTermDebt };
                export namespace longTermProvisions_1 {
                    let type_786: string;
                    export { type_786 as type };
                }
                export { longTermProvisions_1 as longTermProvisions };
                export namespace currentLiabilities_1 {
                    let type_787: string;
                    export { type_787 as type };
                }
                export { currentLiabilities_1 as currentLiabilities };
                export namespace otherCurrentLiabilities_1 {
                    let type_788: string;
                    export { type_788 as type };
                }
                export { otherCurrentLiabilities_1 as otherCurrentLiabilities };
                export namespace currentDeferredLiabilities_1 {
                    let type_789: string;
                    export { type_789 as type };
                }
                export { currentDeferredLiabilities_1 as currentDeferredLiabilities };
                export namespace currentDeferredRevenue_1 {
                    let type_790: string;
                    export { type_790 as type };
                }
                export { currentDeferredRevenue_1 as currentDeferredRevenue };
                export namespace currentDeferredTaxesLiabilities_1 {
                    let type_791: string;
                    export { type_791 as type };
                }
                export { currentDeferredTaxesLiabilities_1 as currentDeferredTaxesLiabilities };
                export namespace currentDebtAndCapitalLeaseObligation_1 {
                    let type_792: string;
                    export { type_792 as type };
                }
                export { currentDebtAndCapitalLeaseObligation_1 as currentDebtAndCapitalLeaseObligation };
                export namespace currentCapitalLeaseObligation_1 {
                    let type_793: string;
                    export { type_793 as type };
                }
                export { currentCapitalLeaseObligation_1 as currentCapitalLeaseObligation };
                export namespace currentDebt_1 {
                    let type_794: string;
                    export { type_794 as type };
                }
                export { currentDebt_1 as currentDebt };
                export namespace otherCurrentBorrowings_1 {
                    let type_795: string;
                    export { type_795 as type };
                }
                export { otherCurrentBorrowings_1 as otherCurrentBorrowings };
                export namespace lineOfCredit_1 {
                    let type_796: string;
                    export { type_796 as type };
                }
                export { lineOfCredit_1 as lineOfCredit };
                export namespace commercialPaper_1 {
                    let type_797: string;
                    export { type_797 as type };
                }
                export { commercialPaper_1 as commercialPaper };
                export namespace currentNotesPayable_1 {
                    let type_798: string;
                    export { type_798 as type };
                }
                export { currentNotesPayable_1 as currentNotesPayable };
                export namespace pensionandOtherPostRetirementBenefitPlansCurrent_1 {
                    let type_799: string;
                    export { type_799 as type };
                }
                export { pensionandOtherPostRetirementBenefitPlansCurrent_1 as pensionandOtherPostRetirementBenefitPlansCurrent };
                export namespace currentProvisions_1 {
                    let type_800: string;
                    export { type_800 as type };
                }
                export { currentProvisions_1 as currentProvisions };
                export namespace payablesAndAccruedExpenses_1 {
                    let type_801: string;
                    export { type_801 as type };
                }
                export { payablesAndAccruedExpenses_1 as payablesAndAccruedExpenses };
                export namespace currentAccruedExpenses_1 {
                    let type_802: string;
                    export { type_802 as type };
                }
                export { currentAccruedExpenses_1 as currentAccruedExpenses };
                export namespace interestPayable_1 {
                    let type_803: string;
                    export { type_803 as type };
                }
                export { interestPayable_1 as interestPayable };
                export namespace payables_1 {
                    let type_804: string;
                    export { type_804 as type };
                }
                export { payables_1 as payables };
                export namespace otherPayable_1 {
                    let type_805: string;
                    export { type_805 as type };
                }
                export { otherPayable_1 as otherPayable };
                export namespace duetoRelatedPartiesCurrent_1 {
                    let type_806: string;
                    export { type_806 as type };
                }
                export { duetoRelatedPartiesCurrent_1 as duetoRelatedPartiesCurrent };
                export namespace dividendsPayable_1 {
                    let type_807: string;
                    export { type_807 as type };
                }
                export { dividendsPayable_1 as dividendsPayable };
                export namespace totalTaxPayable_1 {
                    let type_808: string;
                    export { type_808 as type };
                }
                export { totalTaxPayable_1 as totalTaxPayable };
                export namespace incomeTaxPayable_1 {
                    let type_809: string;
                    export { type_809 as type };
                }
                export { incomeTaxPayable_1 as incomeTaxPayable };
                export namespace accountsPayable_1 {
                    let type_810: string;
                    export { type_810 as type };
                }
                export { accountsPayable_1 as accountsPayable };
                export namespace totalAssets_1 {
                    let type_811: string;
                    export { type_811 as type };
                }
                export { totalAssets_1 as totalAssets };
                export namespace totalNonCurrentAssets_1 {
                    let type_812: string;
                    export { type_812 as type };
                }
                export { totalNonCurrentAssets_1 as totalNonCurrentAssets };
                export namespace otherNonCurrentAssets_1 {
                    let type_813: string;
                    export { type_813 as type };
                }
                export { otherNonCurrentAssets_1 as otherNonCurrentAssets };
                export namespace definedPensionBenefit_1 {
                    let type_814: string;
                    export { type_814 as type };
                }
                export { definedPensionBenefit_1 as definedPensionBenefit };
                export namespace nonCurrentPrepaidAssets_1 {
                    let type_815: string;
                    export { type_815 as type };
                }
                export { nonCurrentPrepaidAssets_1 as nonCurrentPrepaidAssets };
                export namespace nonCurrentDeferredAssets_1 {
                    let type_816: string;
                    export { type_816 as type };
                }
                export { nonCurrentDeferredAssets_1 as nonCurrentDeferredAssets };
                export namespace nonCurrentDeferredTaxesAssets_1 {
                    let type_817: string;
                    export { type_817 as type };
                }
                export { nonCurrentDeferredTaxesAssets_1 as nonCurrentDeferredTaxesAssets };
                export namespace duefromRelatedPartiesNonCurrent_1 {
                    let type_818: string;
                    export { type_818 as type };
                }
                export { duefromRelatedPartiesNonCurrent_1 as duefromRelatedPartiesNonCurrent };
                export namespace nonCurrentNoteReceivables_1 {
                    let type_819: string;
                    export { type_819 as type };
                }
                export { nonCurrentNoteReceivables_1 as nonCurrentNoteReceivables };
                export namespace nonCurrentAccountsReceivable_1 {
                    let type_820: string;
                    export { type_820 as type };
                }
                export { nonCurrentAccountsReceivable_1 as nonCurrentAccountsReceivable };
                export namespace financialAssets_1 {
                    let type_821: string;
                    export { type_821 as type };
                }
                export { financialAssets_1 as financialAssets };
                export namespace investmentsAndAdvances_1 {
                    let type_822: string;
                    export { type_822 as type };
                }
                export { investmentsAndAdvances_1 as investmentsAndAdvances };
                export namespace otherInvestments_1 {
                    let type_823: string;
                    export { type_823 as type };
                }
                export { otherInvestments_1 as otherInvestments };
                export namespace investmentinFinancialAssets_1 {
                    let type_824: string;
                    export { type_824 as type };
                }
                export { investmentinFinancialAssets_1 as investmentinFinancialAssets };
                export namespace heldToMaturitySecurities_1 {
                    let type_825: string;
                    export { type_825 as type };
                }
                export { heldToMaturitySecurities_1 as heldToMaturitySecurities };
                export namespace availableForSaleSecurities_1 {
                    let type_826: string;
                    export { type_826 as type };
                }
                export { availableForSaleSecurities_1 as availableForSaleSecurities };
                export namespace financialAssetsDesignatedasFairValueThroughProfitorLossTotal_1 {
                    let type_827: string;
                    export { type_827 as type };
                }
                export { financialAssetsDesignatedasFairValueThroughProfitorLossTotal_1 as financialAssetsDesignatedasFairValueThroughProfitorLossTotal };
                export namespace tradingSecurities_1 {
                    let type_828: string;
                    export { type_828 as type };
                }
                export { tradingSecurities_1 as tradingSecurities };
                export namespace longTermEquityInvestment_1 {
                    let type_829: string;
                    export { type_829 as type };
                }
                export { longTermEquityInvestment_1 as longTermEquityInvestment };
                export namespace investmentsinJointVenturesatCost_1 {
                    let type_830: string;
                    export { type_830 as type };
                }
                export { investmentsinJointVenturesatCost_1 as investmentsinJointVenturesatCost };
                export namespace investmentsInOtherVenturesUnderEquityMethod_1 {
                    let type_831: string;
                    export { type_831 as type };
                }
                export { investmentsInOtherVenturesUnderEquityMethod_1 as investmentsInOtherVenturesUnderEquityMethod };
                export namespace investmentsinAssociatesatCost_1 {
                    let type_832: string;
                    export { type_832 as type };
                }
                export { investmentsinAssociatesatCost_1 as investmentsinAssociatesatCost };
                export namespace investmentsinSubsidiariesatCost_1 {
                    let type_833: string;
                    export { type_833 as type };
                }
                export { investmentsinSubsidiariesatCost_1 as investmentsinSubsidiariesatCost };
                export namespace investmentProperties_1 {
                    let type_834: string;
                    export { type_834 as type };
                }
                export { investmentProperties_1 as investmentProperties };
                export namespace goodwillAndOtherIntangibleAssets_1 {
                    let type_835: string;
                    export { type_835 as type };
                }
                export { goodwillAndOtherIntangibleAssets_1 as goodwillAndOtherIntangibleAssets };
                export namespace otherIntangibleAssets_1 {
                    let type_836: string;
                    export { type_836 as type };
                }
                export { otherIntangibleAssets_1 as otherIntangibleAssets };
                export namespace goodwill_1 {
                    let type_837: string;
                    export { type_837 as type };
                }
                export { goodwill_1 as goodwill };
                export namespace netPPE_1 {
                    let type_838: string;
                    export { type_838 as type };
                }
                export { netPPE_1 as netPPE };
                export namespace accumulatedDepreciation_1 {
                    let type_839: string;
                    export { type_839 as type };
                }
                export { accumulatedDepreciation_1 as accumulatedDepreciation };
                export namespace grossPPE_1 {
                    let type_840: string;
                    export { type_840 as type };
                }
                export { grossPPE_1 as grossPPE };
                export namespace leases_1 {
                    let type_841: string;
                    export { type_841 as type };
                }
                export { leases_1 as leases };
                export namespace constructionInProgress_1 {
                    let type_842: string;
                    export { type_842 as type };
                }
                export { constructionInProgress_1 as constructionInProgress };
                export namespace otherProperties_1 {
                    let type_843: string;
                    export { type_843 as type };
                }
                export { otherProperties_1 as otherProperties };
                export namespace machineryFurnitureEquipment_1 {
                    let type_844: string;
                    export { type_844 as type };
                }
                export { machineryFurnitureEquipment_1 as machineryFurnitureEquipment };
                export namespace buildingsAndImprovements_1 {
                    let type_845: string;
                    export { type_845 as type };
                }
                export { buildingsAndImprovements_1 as buildingsAndImprovements };
                export namespace landAndImprovements_1 {
                    let type_846: string;
                    export { type_846 as type };
                }
                export { landAndImprovements_1 as landAndImprovements };
                export namespace properties_5 {
                    let type_847: string;
                    export { type_847 as type };
                }
                export { properties_5 as properties };
                export namespace currentAssets_1 {
                    let type_848: string;
                    export { type_848 as type };
                }
                export { currentAssets_1 as currentAssets };
                export namespace otherCurrentAssets_1 {
                    let type_849: string;
                    export { type_849 as type };
                }
                export { otherCurrentAssets_1 as otherCurrentAssets };
                export namespace hedgingAssetsCurrent_1 {
                    let type_850: string;
                    export { type_850 as type };
                }
                export { hedgingAssetsCurrent_1 as hedgingAssetsCurrent };
                export namespace assetsHeldForSaleCurrent_1 {
                    let type_851: string;
                    export { type_851 as type };
                }
                export { assetsHeldForSaleCurrent_1 as assetsHeldForSaleCurrent };
                export namespace currentDeferredAssets_1 {
                    let type_852: string;
                    export { type_852 as type };
                }
                export { currentDeferredAssets_1 as currentDeferredAssets };
                export namespace currentDeferredTaxesAssets_1 {
                    let type_853: string;
                    export { type_853 as type };
                }
                export { currentDeferredTaxesAssets_1 as currentDeferredTaxesAssets };
                export namespace restrictedCash_1 {
                    let type_854: string;
                    export { type_854 as type };
                }
                export { restrictedCash_1 as restrictedCash };
                export namespace prepaidAssets_1 {
                    let type_855: string;
                    export { type_855 as type };
                }
                export { prepaidAssets_1 as prepaidAssets };
                export namespace inventory_1 {
                    let type_856: string;
                    export { type_856 as type };
                }
                export { inventory_1 as inventory };
                export namespace inventoriesAdjustmentsAllowances_1 {
                    let type_857: string;
                    export { type_857 as type };
                }
                export { inventoriesAdjustmentsAllowances_1 as inventoriesAdjustmentsAllowances };
                export namespace otherInventories_1 {
                    let type_858: string;
                    export { type_858 as type };
                }
                export { otherInventories_1 as otherInventories };
                export namespace finishedGoods_1 {
                    let type_859: string;
                    export { type_859 as type };
                }
                export { finishedGoods_1 as finishedGoods };
                export namespace workInProcess_1 {
                    let type_860: string;
                    export { type_860 as type };
                }
                export { workInProcess_1 as workInProcess };
                export namespace rawMaterials_1 {
                    let type_861: string;
                    export { type_861 as type };
                }
                export { rawMaterials_1 as rawMaterials };
                export namespace receivables_1 {
                    let type_862: string;
                    export { type_862 as type };
                }
                export { receivables_1 as receivables };
                export namespace receivablesAdjustmentsAllowances_1 {
                    let type_863: string;
                    export { type_863 as type };
                }
                export { receivablesAdjustmentsAllowances_1 as receivablesAdjustmentsAllowances };
                export namespace otherReceivables_1 {
                    let type_864: string;
                    export { type_864 as type };
                }
                export { otherReceivables_1 as otherReceivables };
                export namespace duefromRelatedPartiesCurrent_1 {
                    let type_865: string;
                    export { type_865 as type };
                }
                export { duefromRelatedPartiesCurrent_1 as duefromRelatedPartiesCurrent };
                export namespace taxesReceivable_1 {
                    let type_866: string;
                    export { type_866 as type };
                }
                export { taxesReceivable_1 as taxesReceivable };
                export namespace accruedInterestReceivable_1 {
                    let type_867: string;
                    export { type_867 as type };
                }
                export { accruedInterestReceivable_1 as accruedInterestReceivable };
                export namespace notesReceivable_1 {
                    let type_868: string;
                    export { type_868 as type };
                }
                export { notesReceivable_1 as notesReceivable };
                export namespace loansReceivable_1 {
                    let type_869: string;
                    export { type_869 as type };
                }
                export { loansReceivable_1 as loansReceivable };
                export namespace accountsReceivable_1 {
                    let type_870: string;
                    export { type_870 as type };
                }
                export { accountsReceivable_1 as accountsReceivable };
                export namespace allowanceForDoubtfulAccountsReceivable_1 {
                    let type_871: string;
                    export { type_871 as type };
                }
                export { allowanceForDoubtfulAccountsReceivable_1 as allowanceForDoubtfulAccountsReceivable };
                export namespace grossAccountsReceivable_1 {
                    let type_872: string;
                    export { type_872 as type };
                }
                export { grossAccountsReceivable_1 as grossAccountsReceivable };
                export namespace cashCashEquivalentsAndShortTermInvestments_1 {
                    let type_873: string;
                    export { type_873 as type };
                }
                export { cashCashEquivalentsAndShortTermInvestments_1 as cashCashEquivalentsAndShortTermInvestments };
                export namespace otherShortTermInvestments_1 {
                    let type_874: string;
                    export { type_874 as type };
                }
                export { otherShortTermInvestments_1 as otherShortTermInvestments };
                export namespace cashAndCashEquivalents_1 {
                    let type_875: string;
                    export { type_875 as type };
                }
                export { cashAndCashEquivalents_1 as cashAndCashEquivalents };
                export namespace cashEquivalents_1 {
                    let type_876: string;
                    export { type_876 as type };
                }
                export { cashEquivalents_1 as cashEquivalents };
                export namespace cashFinancial_1 {
                    let type_877: string;
                    export { type_877 as type };
                }
                export { cashFinancial_1 as cashFinancial };
                export namespace otherLiabilities_1 {
                    let type_878: string;
                    export { type_878 as type };
                }
                export { otherLiabilities_1 as otherLiabilities };
                export namespace liabilitiesOfDiscontinuedOperations_1 {
                    let type_879: string;
                    export { type_879 as type };
                }
                export { liabilitiesOfDiscontinuedOperations_1 as liabilitiesOfDiscontinuedOperations };
                export namespace subordinatedLiabilities_1 {
                    let type_880: string;
                    export { type_880 as type };
                }
                export { subordinatedLiabilities_1 as subordinatedLiabilities };
                export namespace advanceFromFederalHomeLoanBanks_1 {
                    let type_881: string;
                    export { type_881 as type };
                }
                export { advanceFromFederalHomeLoanBanks_1 as advanceFromFederalHomeLoanBanks };
                export namespace tradingLiabilities_1 {
                    let type_882: string;
                    export { type_882 as type };
                }
                export { tradingLiabilities_1 as tradingLiabilities };
                export namespace duetoRelatedParties_1 {
                    let type_883: string;
                    export { type_883 as type };
                }
                export { duetoRelatedParties_1 as duetoRelatedParties };
                export namespace securitiesLoaned_1 {
                    let type_884: string;
                    export { type_884 as type };
                }
                export { securitiesLoaned_1 as securitiesLoaned };
                export namespace federalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchase_1 {
                    let type_885: string;
                    export { type_885 as type };
                }
                export { federalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchase_1 as federalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchase };
                export namespace financialInstrumentsSoldUnderAgreementsToRepurchase_1 {
                    let type_886: string;
                    export { type_886 as type };
                }
                export { financialInstrumentsSoldUnderAgreementsToRepurchase_1 as financialInstrumentsSoldUnderAgreementsToRepurchase };
                export namespace federalFundsPurchased_1 {
                    let type_887: string;
                    export { type_887 as type };
                }
                export { federalFundsPurchased_1 as federalFundsPurchased };
                export namespace totalDeposits_1 {
                    let type_888: string;
                    export { type_888 as type };
                }
                export { totalDeposits_1 as totalDeposits };
                export namespace nonInterestBearingDeposits_1 {
                    let type_889: string;
                    export { type_889 as type };
                }
                export { nonInterestBearingDeposits_1 as nonInterestBearingDeposits };
                export namespace interestBearingDepositsLiabilities_1 {
                    let type_890: string;
                    export { type_890 as type };
                }
                export { interestBearingDepositsLiabilities_1 as interestBearingDepositsLiabilities };
                export namespace customerAccounts_1 {
                    let type_891: string;
                    export { type_891 as type };
                }
                export { customerAccounts_1 as customerAccounts };
                export namespace depositsbyBank_1 {
                    let type_892: string;
                    export { type_892 as type };
                }
                export { depositsbyBank_1 as depositsbyBank };
                export namespace otherAssets_1 {
                    let type_893: string;
                    export { type_893 as type };
                }
                export { otherAssets_1 as otherAssets };
                export namespace assetsHeldForSale_1 {
                    let type_894: string;
                    export { type_894 as type };
                }
                export { assetsHeldForSale_1 as assetsHeldForSale };
                export namespace deferredAssets_1 {
                    let type_895: string;
                    export { type_895 as type };
                }
                export { deferredAssets_1 as deferredAssets };
                export namespace deferredTaxAssets_1 {
                    let type_896: string;
                    export { type_896 as type };
                }
                export { deferredTaxAssets_1 as deferredTaxAssets };
                export namespace dueFromRelatedParties_1 {
                    let type_897: string;
                    export { type_897 as type };
                }
                export { dueFromRelatedParties_1 as dueFromRelatedParties };
                export namespace allowanceForNotesReceivable_1 {
                    let type_898: string;
                    export { type_898 as type };
                }
                export { allowanceForNotesReceivable_1 as allowanceForNotesReceivable };
                export namespace grossNotesReceivable_1 {
                    let type_899: string;
                    export { type_899 as type };
                }
                export { grossNotesReceivable_1 as grossNotesReceivable };
                export namespace netLoan_1 {
                    let type_900: string;
                    export { type_900 as type };
                }
                export { netLoan_1 as netLoan };
                export namespace unearnedIncome_1 {
                    let type_901: string;
                    export { type_901 as type };
                }
                export { unearnedIncome_1 as unearnedIncome };
                export namespace allowanceForLoansAndLeaseLosses_1 {
                    let type_902: string;
                    export { type_902 as type };
                }
                export { allowanceForLoansAndLeaseLosses_1 as allowanceForLoansAndLeaseLosses };
                export namespace grossLoan_1 {
                    let type_903: string;
                    export { type_903 as type };
                }
                export { grossLoan_1 as grossLoan };
                export namespace otherLoanAssets_1 {
                    let type_904: string;
                    export { type_904 as type };
                }
                export { otherLoanAssets_1 as otherLoanAssets };
                export namespace mortgageLoan_1 {
                    let type_905: string;
                    export { type_905 as type };
                }
                export { mortgageLoan_1 as mortgageLoan };
                export namespace consumerLoan_1 {
                    let type_906: string;
                    export { type_906 as type };
                }
                export { consumerLoan_1 as consumerLoan };
                export namespace commercialLoan_1 {
                    let type_907: string;
                    export { type_907 as type };
                }
                export { commercialLoan_1 as commercialLoan };
                export namespace loansHeldForSale_1 {
                    let type_908: string;
                    export { type_908 as type };
                }
                export { loansHeldForSale_1 as loansHeldForSale };
                export namespace derivativeAssets_1 {
                    let type_909: string;
                    export { type_909 as type };
                }
                export { derivativeAssets_1 as derivativeAssets };
                export namespace securitiesAndInvestments_1 {
                    let type_910: string;
                    export { type_910 as type };
                }
                export { securitiesAndInvestments_1 as securitiesAndInvestments };
                export namespace bankOwnedLifeInsurance_1 {
                    let type_911: string;
                    export { type_911 as type };
                }
                export { bankOwnedLifeInsurance_1 as bankOwnedLifeInsurance };
                export namespace otherRealEstateOwned_1 {
                    let type_912: string;
                    export { type_912 as type };
                }
                export { otherRealEstateOwned_1 as otherRealEstateOwned };
                export namespace foreclosedAssets_1 {
                    let type_913: string;
                    export { type_913 as type };
                }
                export { foreclosedAssets_1 as foreclosedAssets };
                export namespace customerAcceptances_1 {
                    let type_914: string;
                    export { type_914 as type };
                }
                export { customerAcceptances_1 as customerAcceptances };
                export namespace federalHomeLoanBankStock_1 {
                    let type_915: string;
                    export { type_915 as type };
                }
                export { federalHomeLoanBankStock_1 as federalHomeLoanBankStock };
                export namespace securityBorrowed_1 {
                    let type_916: string;
                    export { type_916 as type };
                }
                export { securityBorrowed_1 as securityBorrowed };
                export namespace cashCashEquivalentsAndFederalFundsSold_1 {
                    let type_917: string;
                    export { type_917 as type };
                }
                export { cashCashEquivalentsAndFederalFundsSold_1 as cashCashEquivalentsAndFederalFundsSold };
                export namespace moneyMarketInvestments_1 {
                    let type_918: string;
                    export { type_918 as type };
                }
                export { moneyMarketInvestments_1 as moneyMarketInvestments };
                export namespace federalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell_1 {
                    let type_919: string;
                    export { type_919 as type };
                }
                export { federalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell_1 as federalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell };
                export namespace securityAgreeToBeResell_1 {
                    let type_920: string;
                    export { type_920 as type };
                }
                export { securityAgreeToBeResell_1 as securityAgreeToBeResell };
                export namespace federalFundsSold_1 {
                    let type_921: string;
                    export { type_921 as type };
                }
                export { federalFundsSold_1 as federalFundsSold };
                export namespace restrictedCashAndInvestments_1 {
                    let type_922: string;
                    export { type_922 as type };
                }
                export { restrictedCashAndInvestments_1 as restrictedCashAndInvestments };
                export namespace restrictedInvestments_1 {
                    let type_923: string;
                    export { type_923 as type };
                }
                export { restrictedInvestments_1 as restrictedInvestments };
                export namespace restrictedCashAndCashEquivalents_1 {
                    let type_924: string;
                    export { type_924 as type };
                }
                export { restrictedCashAndCashEquivalents_1 as restrictedCashAndCashEquivalents };
                export namespace interestBearingDepositsAssets_1 {
                    let type_925: string;
                    export { type_925 as type };
                }
                export { interestBearingDepositsAssets_1 as interestBearingDepositsAssets };
                export namespace cashAndDueFromBanks_1 {
                    let type_926: string;
                    export { type_926 as type };
                }
                export { cashAndDueFromBanks_1 as cashAndDueFromBanks };
                export namespace bankIndebtedness_1 {
                    let type_927: string;
                    export { type_927 as type };
                }
                export { bankIndebtedness_1 as bankIndebtedness };
                export namespace mineralProperties_1 {
                    let type_928: string;
                    export { type_928 as type };
                }
                export { mineralProperties_1 as mineralProperties };
                export namespace grossProfit_2 {
                    let type_929: string;
                    export { type_929 as type };
                }
                export { grossProfit_2 as grossProfit };
                export namespace netIncomeCommonStockholders_2 {
                    let type_930: string;
                    export { type_930 as type };
                }
                export { netIncomeCommonStockholders_2 as netIncomeCommonStockholders };
                export namespace dilutedAverageShares_2 {
                    let type_931: string;
                    export { type_931 as type };
                }
                export { dilutedAverageShares_2 as dilutedAverageShares };
                export namespace EBITDA_2 {
                    let type_932: string;
                    export { type_932 as type };
                }
                export { EBITDA_2 as EBITDA };
                export namespace costOfRevenue_2 {
                    let type_933: string;
                    export { type_933 as type };
                }
                export { costOfRevenue_2 as costOfRevenue };
                export namespace operatingExpense_2 {
                    let type_934: string;
                    export { type_934 as type };
                }
                export { operatingExpense_2 as operatingExpense };
                export namespace normalizedIncome_2 {
                    let type_935: string;
                    export { type_935 as type };
                }
                export { normalizedIncome_2 as normalizedIncome };
                export namespace netIncomeIncludingNoncontrollingInterests_2 {
                    let type_936: string;
                    export { type_936 as type };
                }
                export { netIncomeIncludingNoncontrollingInterests_2 as netIncomeIncludingNoncontrollingInterests };
                export namespace netIncomeFromContinuingOperationNetMinorityInterest_2 {
                    let type_937: string;
                    export { type_937 as type };
                }
                export { netIncomeFromContinuingOperationNetMinorityInterest_2 as netIncomeFromContinuingOperationNetMinorityInterest };
                export namespace reconciledCostOfRevenue_2 {
                    let type_938: string;
                    export { type_938 as type };
                }
                export { reconciledCostOfRevenue_2 as reconciledCostOfRevenue };
                export namespace otherIncomeExpense_2 {
                    let type_939: string;
                    export { type_939 as type };
                }
                export { otherIncomeExpense_2 as otherIncomeExpense };
                export namespace taxProvision_2 {
                    let type_940: string;
                    export { type_940 as type };
                }
                export { taxProvision_2 as taxProvision };
                export namespace pretaxIncome_2 {
                    let type_941: string;
                    export { type_941 as type };
                }
                export { pretaxIncome_2 as pretaxIncome };
                export namespace researchAndDevelopment_2 {
                    let type_942: string;
                    export { type_942 as type };
                }
                export { researchAndDevelopment_2 as researchAndDevelopment };
                export namespace dilutedEPS_2 {
                    let type_943: string;
                    export { type_943 as type };
                }
                export { dilutedEPS_2 as dilutedEPS };
                export namespace operatingIncome_2 {
                    let type_944: string;
                    export { type_944 as type };
                }
                export { operatingIncome_2 as operatingIncome };
                export namespace totalRevenue_2 {
                    let type_945: string;
                    export { type_945 as type };
                }
                export { totalRevenue_2 as totalRevenue };
                export namespace netIncomeFromContinuingAndDiscontinuedOperation_2 {
                    let type_946: string;
                    export { type_946 as type };
                }
                export { netIncomeFromContinuingAndDiscontinuedOperation_2 as netIncomeFromContinuingAndDiscontinuedOperation };
                export namespace operatingRevenue_2 {
                    let type_947: string;
                    export { type_947 as type };
                }
                export { operatingRevenue_2 as operatingRevenue };
                export namespace EBIT_2 {
                    let type_948: string;
                    export { type_948 as type };
                }
                export { EBIT_2 as EBIT };
                export namespace basicEPS_2 {
                    let type_949: string;
                    export { type_949 as type };
                }
                export { basicEPS_2 as basicEPS };
                export namespace sellingGeneralAndAdministration_2 {
                    let type_950: string;
                    export { type_950 as type };
                }
                export { sellingGeneralAndAdministration_2 as sellingGeneralAndAdministration };
                export namespace netIncomeContinuousOperations_2 {
                    let type_951: string;
                    export { type_951 as type };
                }
                export { netIncomeContinuousOperations_2 as netIncomeContinuousOperations };
                export namespace totalOperatingIncomeAsReported_2 {
                    let type_952: string;
                    export { type_952 as type };
                }
                export { totalOperatingIncomeAsReported_2 as totalOperatingIncomeAsReported };
                export namespace normalizedEBITDA_2 {
                    let type_953: string;
                    export { type_953 as type };
                }
                export { normalizedEBITDA_2 as normalizedEBITDA };
                export namespace netIncome_2 {
                    let type_954: string;
                    export { type_954 as type };
                }
                export { netIncome_2 as netIncome };
                export namespace basicAverageShares_2 {
                    let type_955: string;
                    export { type_955 as type };
                }
                export { basicAverageShares_2 as basicAverageShares };
                export namespace dilutedNIAvailtoComStockholders_2 {
                    let type_956: string;
                    export { type_956 as type };
                }
                export { dilutedNIAvailtoComStockholders_2 as dilutedNIAvailtoComStockholders };
                export namespace taxRateForCalcs_2 {
                    let type_957: string;
                    export { type_957 as type };
                }
                export { taxRateForCalcs_2 as taxRateForCalcs };
                export namespace otherNonOperatingIncomeExpenses_2 {
                    let type_958: string;
                    export { type_958 as type };
                }
                export { otherNonOperatingIncomeExpenses_2 as otherNonOperatingIncomeExpenses };
                export namespace totalExpenses_2 {
                    let type_959: string;
                    export { type_959 as type };
                }
                export { totalExpenses_2 as totalExpenses };
                export namespace reconciledDepreciation_2 {
                    let type_960: string;
                    export { type_960 as type };
                }
                export { reconciledDepreciation_2 as reconciledDepreciation };
                export namespace interestIncomeNonOperating_2 {
                    let type_961: string;
                    export { type_961 as type };
                }
                export { interestIncomeNonOperating_2 as interestIncomeNonOperating };
                export namespace interestIncome_2 {
                    let type_962: string;
                    export { type_962 as type };
                }
                export { interestIncome_2 as interestIncome };
                export namespace netInterestIncome_2 {
                    let type_963: string;
                    export { type_963 as type };
                }
                export { netInterestIncome_2 as netInterestIncome };
                export namespace interestExpense_2 {
                    let type_964: string;
                    export { type_964 as type };
                }
                export { interestExpense_2 as interestExpense };
                export namespace netNonOperatingInterestIncomeExpense_2 {
                    let type_965: string;
                    export { type_965 as type };
                }
                export { netNonOperatingInterestIncomeExpense_2 as netNonOperatingInterestIncomeExpense };
                export namespace interestExpenseNonOperating_2 {
                    let type_966: string;
                    export { type_966 as type };
                }
                export { interestExpenseNonOperating_2 as interestExpenseNonOperating };
                export namespace sellingAndMarketingExpense_1 {
                    let type_967: string;
                    export { type_967 as type };
                }
                export { sellingAndMarketingExpense_1 as sellingAndMarketingExpense };
                export namespace generalAndAdministrativeExpense_1 {
                    let type_968: string;
                    export { type_968 as type };
                }
                export { generalAndAdministrativeExpense_1 as generalAndAdministrativeExpense };
                export namespace otherGandA_1 {
                    let type_969: string;
                    export { type_969 as type };
                }
                export { otherGandA_1 as otherGandA };
                export namespace depreciationAmortizationDepletionIncomeStatement_1 {
                    let type_970: string;
                    export { type_970 as type };
                }
                export { depreciationAmortizationDepletionIncomeStatement_1 as depreciationAmortizationDepletionIncomeStatement };
                export namespace depletionIncomeStatement_1 {
                    let type_971: string;
                    export { type_971 as type };
                }
                export { depletionIncomeStatement_1 as depletionIncomeStatement };
                export namespace depreciationAndAmortizationInIncomeStatement_1 {
                    let type_972: string;
                    export { type_972 as type };
                }
                export { depreciationAndAmortizationInIncomeStatement_1 as depreciationAndAmortizationInIncomeStatement };
                export namespace amortization_1 {
                    let type_973: string;
                    export { type_973 as type };
                }
                export { amortization_1 as amortization };
                export namespace amortizationOfIntangiblesIncomeStatement_1 {
                    let type_974: string;
                    export { type_974 as type };
                }
                export { amortizationOfIntangiblesIncomeStatement_1 as amortizationOfIntangiblesIncomeStatement };
                export namespace depreciationIncomeStatement_1 {
                    let type_975: string;
                    export { type_975 as type };
                }
                export { depreciationIncomeStatement_1 as depreciationIncomeStatement };
                export namespace otherOperatingExpenses_1 {
                    let type_976: string;
                    export { type_976 as type };
                }
                export { otherOperatingExpenses_1 as otherOperatingExpenses };
                export namespace totalOtherFinanceCost_1 {
                    let type_977: string;
                    export { type_977 as type };
                }
                export { totalOtherFinanceCost_1 as totalOtherFinanceCost };
                export namespace writeOff_1 {
                    let type_978: string;
                    export { type_978 as type };
                }
                export { writeOff_1 as writeOff };
                export namespace specialIncomeCharges_1 {
                    let type_979: string;
                    export { type_979 as type };
                }
                export { specialIncomeCharges_1 as specialIncomeCharges };
                export namespace gainOnSaleOfPPE_1 {
                    let type_980: string;
                    export { type_980 as type };
                }
                export { gainOnSaleOfPPE_1 as gainOnSaleOfPPE };
                export namespace gainOnSaleOfBusiness_1 {
                    let type_981: string;
                    export { type_981 as type };
                }
                export { gainOnSaleOfBusiness_1 as gainOnSaleOfBusiness };
                export namespace gainOnSaleOfSecurity_1 {
                    let type_982: string;
                    export { type_982 as type };
                }
                export { gainOnSaleOfSecurity_1 as gainOnSaleOfSecurity };
                export namespace otherSpecialCharges_1 {
                    let type_983: string;
                    export { type_983 as type };
                }
                export { otherSpecialCharges_1 as otherSpecialCharges };
                export namespace minorityInterests_1 {
                    let type_984: string;
                    export { type_984 as type };
                }
                export { minorityInterests_1 as minorityInterests };
                export namespace netIncomeFromTaxLossCarryforward_1 {
                    let type_985: string;
                    export { type_985 as type };
                }
                export { netIncomeFromTaxLossCarryforward_1 as netIncomeFromTaxLossCarryforward };
                export namespace netIncomeExtraordinary_1 {
                    let type_986: string;
                    export { type_986 as type };
                }
                export { netIncomeExtraordinary_1 as netIncomeExtraordinary };
                export namespace netIncomeDiscontinuousOperations_1 {
                    let type_987: string;
                    export { type_987 as type };
                }
                export { netIncomeDiscontinuousOperations_1 as netIncomeDiscontinuousOperations };
                export namespace preferredStockDividends_1 {
                    let type_988: string;
                    export { type_988 as type };
                }
                export { preferredStockDividends_1 as preferredStockDividends };
                export namespace otherunderPreferredStockDividend_1 {
                    let type_989: string;
                    export { type_989 as type };
                }
                export { otherunderPreferredStockDividend_1 as otherunderPreferredStockDividend };
                export namespace dividendPerShare_1 {
                    let type_990: string;
                    export { type_990 as type };
                }
                export { dividendPerShare_1 as dividendPerShare };
                export namespace reportedNormalizedBasicEPS_1 {
                    let type_991: string;
                    export { type_991 as type };
                }
                export { reportedNormalizedBasicEPS_1 as reportedNormalizedBasicEPS };
                export namespace continuingAndDiscontinuedBasicEPS_1 {
                    let type_992: string;
                    export { type_992 as type };
                }
                export { continuingAndDiscontinuedBasicEPS_1 as continuingAndDiscontinuedBasicEPS };
                export namespace basicEPSOtherGainsLosses_1 {
                    let type_993: string;
                    export { type_993 as type };
                }
                export { basicEPSOtherGainsLosses_1 as basicEPSOtherGainsLosses };
                export namespace taxLossCarryforwardBasicEPS_1 {
                    let type_994: string;
                    export { type_994 as type };
                }
                export { taxLossCarryforwardBasicEPS_1 as taxLossCarryforwardBasicEPS };
                export namespace normalizedBasicEPS_1 {
                    let type_995: string;
                    export { type_995 as type };
                }
                export { normalizedBasicEPS_1 as normalizedBasicEPS };
                export namespace basicAccountingChange_1 {
                    let type_996: string;
                    export { type_996 as type };
                }
                export { basicAccountingChange_1 as basicAccountingChange };
                export namespace basicExtraordinary_1 {
                    let type_997: string;
                    export { type_997 as type };
                }
                export { basicExtraordinary_1 as basicExtraordinary };
                export namespace basicDiscontinuousOperations_1 {
                    let type_998: string;
                    export { type_998 as type };
                }
                export { basicDiscontinuousOperations_1 as basicDiscontinuousOperations };
                export namespace basicContinuousOperations_1 {
                    let type_999: string;
                    export { type_999 as type };
                }
                export { basicContinuousOperations_1 as basicContinuousOperations };
                export namespace reportedNormalizedDilutedEPS_1 {
                    let type_1000: string;
                    export { type_1000 as type };
                }
                export { reportedNormalizedDilutedEPS_1 as reportedNormalizedDilutedEPS };
                export namespace continuingAndDiscontinuedDilutedEPS_1 {
                    let type_1001: string;
                    export { type_1001 as type };
                }
                export { continuingAndDiscontinuedDilutedEPS_1 as continuingAndDiscontinuedDilutedEPS };
                export namespace taxLossCarryforwardDilutedEPS_1 {
                    let type_1002: string;
                    export { type_1002 as type };
                }
                export { taxLossCarryforwardDilutedEPS_1 as taxLossCarryforwardDilutedEPS };
                export namespace averageDilutionEarnings_1 {
                    let type_1003: string;
                    export { type_1003 as type };
                }
                export { averageDilutionEarnings_1 as averageDilutionEarnings };
                export namespace normalizedDilutedEPS_1 {
                    let type_1004: string;
                    export { type_1004 as type };
                }
                export { normalizedDilutedEPS_1 as normalizedDilutedEPS };
                export namespace dilutedAccountingChange_1 {
                    let type_1005: string;
                    export { type_1005 as type };
                }
                export { dilutedAccountingChange_1 as dilutedAccountingChange };
                export namespace dilutedExtraordinary_1 {
                    let type_1006: string;
                    export { type_1006 as type };
                }
                export { dilutedExtraordinary_1 as dilutedExtraordinary };
                export namespace dilutedContinuousOperations_1 {
                    let type_1007: string;
                    export { type_1007 as type };
                }
                export { dilutedContinuousOperations_1 as dilutedContinuousOperations };
                export namespace dilutedDiscontinuousOperations_1 {
                    let type_1008: string;
                    export { type_1008 as type };
                }
                export { dilutedDiscontinuousOperations_1 as dilutedDiscontinuousOperations };
                export namespace dilutedEPSOtherGainsLosses_1 {
                    let type_1009: string;
                    export { type_1009 as type };
                }
                export { dilutedEPSOtherGainsLosses_1 as dilutedEPSOtherGainsLosses };
                export namespace totalUnusualItemsExcludingGoodwill_1 {
                    let type_1010: string;
                    export { type_1010 as type };
                }
                export { totalUnusualItemsExcludingGoodwill_1 as totalUnusualItemsExcludingGoodwill };
                export namespace totalUnusualItems_1 {
                    let type_1011: string;
                    export { type_1011 as type };
                }
                export { totalUnusualItems_1 as totalUnusualItems };
                export namespace taxEffectOfUnusualItems_1 {
                    let type_1012: string;
                    export { type_1012 as type };
                }
                export { taxEffectOfUnusualItems_1 as taxEffectOfUnusualItems };
                export namespace rentExpenseSupplemental_1 {
                    let type_1013: string;
                    export { type_1013 as type };
                }
                export { rentExpenseSupplemental_1 as rentExpenseSupplemental };
                export namespace earningsFromEquityInterestNetOfTax_1 {
                    let type_1014: string;
                    export { type_1014 as type };
                }
                export { earningsFromEquityInterestNetOfTax_1 as earningsFromEquityInterestNetOfTax };
                export namespace impairmentOfCapitalAssets_1 {
                    let type_1015: string;
                    export { type_1015 as type };
                }
                export { impairmentOfCapitalAssets_1 as impairmentOfCapitalAssets };
                export namespace restructuringAndMergernAcquisition_1 {
                    let type_1016: string;
                    export { type_1016 as type };
                }
                export { restructuringAndMergernAcquisition_1 as restructuringAndMergernAcquisition };
                export namespace securitiesAmortization_1 {
                    let type_1017: string;
                    export { type_1017 as type };
                }
                export { securitiesAmortization_1 as securitiesAmortization };
                export namespace earningsFromEquityInterest_1 {
                    let type_1018: string;
                    export { type_1018 as type };
                }
                export { earningsFromEquityInterest_1 as earningsFromEquityInterest };
                export namespace otherTaxes_1 {
                    let type_1019: string;
                    export { type_1019 as type };
                }
                export { otherTaxes_1 as otherTaxes };
                export namespace provisionForDoubtfulAccounts_1 {
                    let type_1020: string;
                    export { type_1020 as type };
                }
                export { provisionForDoubtfulAccounts_1 as provisionForDoubtfulAccounts };
                export namespace insuranceAndClaims_1 {
                    let type_1021: string;
                    export { type_1021 as type };
                }
                export { insuranceAndClaims_1 as insuranceAndClaims };
                export namespace rentAndLandingFees_1 {
                    let type_1022: string;
                    export { type_1022 as type };
                }
                export { rentAndLandingFees_1 as rentAndLandingFees };
                export namespace salariesAndWages_1 {
                    let type_1023: string;
                    export { type_1023 as type };
                }
                export { salariesAndWages_1 as salariesAndWages };
                export namespace exciseTaxes_1 {
                    let type_1024: string;
                    export { type_1024 as type };
                }
                export { exciseTaxes_1 as exciseTaxes };
                export namespace totalMoneyMarketInvestments_1 {
                    let type_1025: string;
                    export { type_1025 as type };
                }
                export { totalMoneyMarketInvestments_1 as totalMoneyMarketInvestments };
                export namespace interestIncomeAfterProvisionForLoanLoss_1 {
                    let type_1026: string;
                    export { type_1026 as type };
                }
                export { interestIncomeAfterProvisionForLoanLoss_1 as interestIncomeAfterProvisionForLoanLoss };
                export namespace otherThanPreferredStockDividend_1 {
                    let type_1027: string;
                    export { type_1027 as type };
                }
                export { otherThanPreferredStockDividend_1 as otherThanPreferredStockDividend };
                export namespace lossonExtinguishmentofDebt_1 {
                    let type_1028: string;
                    export { type_1028 as type };
                }
                export { lossonExtinguishmentofDebt_1 as lossonExtinguishmentofDebt };
                export namespace incomefromAssociatesandOtherParticipatingInterests_1 {
                    let type_1029: string;
                    export { type_1029 as type };
                }
                export { incomefromAssociatesandOtherParticipatingInterests_1 as incomefromAssociatesandOtherParticipatingInterests };
                export namespace nonInterestExpense_1 {
                    let type_1030: string;
                    export { type_1030 as type };
                }
                export { nonInterestExpense_1 as nonInterestExpense };
                export namespace otherNonInterestExpense_1 {
                    let type_1031: string;
                    export { type_1031 as type };
                }
                export { otherNonInterestExpense_1 as otherNonInterestExpense };
                export namespace professionalExpenseAndContractServicesExpense_1 {
                    let type_1032: string;
                    export { type_1032 as type };
                }
                export { professionalExpenseAndContractServicesExpense_1 as professionalExpenseAndContractServicesExpense };
                export namespace occupancyAndEquipment_1 {
                    let type_1033: string;
                    export { type_1033 as type };
                }
                export { occupancyAndEquipment_1 as occupancyAndEquipment };
                export namespace equipment_1 {
                    let type_1034: string;
                    export { type_1034 as type };
                }
                export { equipment_1 as equipment };
                export namespace netOccupancyExpense_1 {
                    let type_1035: string;
                    export { type_1035 as type };
                }
                export { netOccupancyExpense_1 as netOccupancyExpense };
                export namespace creditLossesProvision_1 {
                    let type_1036: string;
                    export { type_1036 as type };
                }
                export { creditLossesProvision_1 as creditLossesProvision };
                export namespace nonInterestIncome_1 {
                    let type_1037: string;
                    export { type_1037 as type };
                }
                export { nonInterestIncome_1 as nonInterestIncome };
                export namespace otherNonInterestIncome_1 {
                    let type_1038: string;
                    export { type_1038 as type };
                }
                export { otherNonInterestIncome_1 as otherNonInterestIncome };
                export namespace gainLossonSaleofAssets_1 {
                    let type_1039: string;
                    export { type_1039 as type };
                }
                export { gainLossonSaleofAssets_1 as gainLossonSaleofAssets };
                export namespace gainonSaleofInvestmentProperty_1 {
                    let type_1040: string;
                    export { type_1040 as type };
                }
                export { gainonSaleofInvestmentProperty_1 as gainonSaleofInvestmentProperty };
                export namespace gainonSaleofLoans_1 {
                    let type_1041: string;
                    export { type_1041 as type };
                }
                export { gainonSaleofLoans_1 as gainonSaleofLoans };
                export namespace foreignExchangeTradingGains_1 {
                    let type_1042: string;
                    export { type_1042 as type };
                }
                export { foreignExchangeTradingGains_1 as foreignExchangeTradingGains };
                export namespace tradingGainLoss_1 {
                    let type_1043: string;
                    export { type_1043 as type };
                }
                export { tradingGainLoss_1 as tradingGainLoss };
                export namespace investmentBankingProfit_1 {
                    let type_1044: string;
                    export { type_1044 as type };
                }
                export { investmentBankingProfit_1 as investmentBankingProfit };
                export namespace dividendIncome_1 {
                    let type_1045: string;
                    export { type_1045 as type };
                }
                export { dividendIncome_1 as dividendIncome };
                export namespace feesAndCommissions_1 {
                    let type_1046: string;
                    export { type_1046 as type };
                }
                export { feesAndCommissions_1 as feesAndCommissions };
                export namespace feesandCommissionExpense_1 {
                    let type_1047: string;
                    export { type_1047 as type };
                }
                export { feesandCommissionExpense_1 as feesandCommissionExpense };
                export namespace feesandCommissionIncome_1 {
                    let type_1048: string;
                    export { type_1048 as type };
                }
                export { feesandCommissionIncome_1 as feesandCommissionIncome };
                export namespace otherCustomerServices_1 {
                    let type_1049: string;
                    export { type_1049 as type };
                }
                export { otherCustomerServices_1 as otherCustomerServices };
                export namespace creditCard_1 {
                    let type_1050: string;
                    export { type_1050 as type };
                }
                export { creditCard_1 as creditCard };
                export namespace securitiesActivities_1 {
                    let type_1051: string;
                    export { type_1051 as type };
                }
                export { securitiesActivities_1 as securitiesActivities };
                export namespace trustFeesbyCommissions_1 {
                    let type_1052: string;
                    export { type_1052 as type };
                }
                export { trustFeesbyCommissions_1 as trustFeesbyCommissions };
                export namespace serviceChargeOnDepositorAccounts_1 {
                    let type_1053: string;
                    export { type_1053 as type };
                }
                export { serviceChargeOnDepositorAccounts_1 as serviceChargeOnDepositorAccounts };
                export namespace totalPremiumsEarned_1 {
                    let type_1054: string;
                    export { type_1054 as type };
                }
                export { totalPremiumsEarned_1 as totalPremiumsEarned };
                export namespace otherInterestExpense_1 {
                    let type_1055: string;
                    export { type_1055 as type };
                }
                export { otherInterestExpense_1 as otherInterestExpense };
                export namespace interestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell_1 {
                    let type_1056: string;
                    export { type_1056 as type };
                }
                export { interestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell_1 as interestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell };
                export namespace interestExpenseForLongTermDebtAndCapitalSecurities_1 {
                    let type_1057: string;
                    export { type_1057 as type };
                }
                export { interestExpenseForLongTermDebtAndCapitalSecurities_1 as interestExpenseForLongTermDebtAndCapitalSecurities };
                export namespace interestExpenseForShortTermDebt_1 {
                    let type_1058: string;
                    export { type_1058 as type };
                }
                export { interestExpenseForShortTermDebt_1 as interestExpenseForShortTermDebt };
                export namespace interestExpenseForDeposit_1 {
                    let type_1059: string;
                    export { type_1059 as type };
                }
                export { interestExpenseForDeposit_1 as interestExpenseForDeposit };
                export namespace otherInterestIncome_1 {
                    let type_1060: string;
                    export { type_1060 as type };
                }
                export { otherInterestIncome_1 as otherInterestIncome };
                export namespace interestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell_1 {
                    let type_1061: string;
                    export { type_1061 as type };
                }
                export { interestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell_1 as interestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell };
                export namespace interestIncomeFromDeposits_1 {
                    let type_1062: string;
                    export { type_1062 as type };
                }
                export { interestIncomeFromDeposits_1 as interestIncomeFromDeposits };
                export namespace interestIncomeFromSecurities_1 {
                    let type_1063: string;
                    export { type_1063 as type };
                }
                export { interestIncomeFromSecurities_1 as interestIncomeFromSecurities };
                export namespace interestIncomeFromLoansAndLease_1 {
                    let type_1064: string;
                    export { type_1064 as type };
                }
                export { interestIncomeFromLoansAndLease_1 as interestIncomeFromLoansAndLease };
                export namespace interestIncomeFromLeases_1 {
                    let type_1065: string;
                    export { type_1065 as type };
                }
                export { interestIncomeFromLeases_1 as interestIncomeFromLeases };
                export namespace interestIncomeFromLoans_1 {
                    let type_1066: string;
                    export { type_1066 as type };
                }
                export { interestIncomeFromLoans_1 as interestIncomeFromLoans };
                export namespace depreciationDepreciationIncomeStatement_1 {
                    let type_1067: string;
                    export { type_1067 as type };
                }
                export { depreciationDepreciationIncomeStatement_1 as depreciationDepreciationIncomeStatement };
                export namespace operationAndMaintenance_1 {
                    let type_1068: string;
                    export { type_1068 as type };
                }
                export { operationAndMaintenance_1 as operationAndMaintenance };
                export namespace otherCostofRevenue_1 {
                    let type_1069: string;
                    export { type_1069 as type };
                }
                export { otherCostofRevenue_1 as otherCostofRevenue };
                export namespace explorationDevelopmentAndMineralPropertyLeaseExpenses_1 {
                    let type_1070: string;
                    export { type_1070 as type };
                }
                export { explorationDevelopmentAndMineralPropertyLeaseExpenses_1 as explorationDevelopmentAndMineralPropertyLeaseExpenses };
            }
            export { properties_4 as properties };
            let required_3: string[];
            export { required_3 as required };
        }
        namespace FundamentalsTimeSeriesResult {
            let anyOf: {
                $ref: string;
            }[];
        }
        namespace FundamentalsTimeSeriesResults {
            let type_1071: string;
            export { type_1071 as type };
            export namespace items {
                let $ref_4: string;
                export { $ref_4 as $ref };
            }
        }
        namespace FundamentalsTimeSeriesOptions {
            let type_1072: string;
            export { type_1072 as type };
            export namespace properties_6 {
                export namespace period1 {
                    let anyOf_1: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    export { anyOf_1 as anyOf };
                }
                export namespace period2 {
                    let anyOf_2: ({
                        type: string;
                        format: string;
                    } | {
                        type: string;
                        format?: undefined;
                    })[];
                    export { anyOf_2 as anyOf };
                }
                export namespace type_1073 {
                    let type_1074: string;
                    export { type_1074 as type };
                }
                export { type_1073 as type };
                export namespace merge {
                    let type_1075: string;
                    export { type_1075 as type };
                }
                export namespace padTimeSeries {
                    let type_1076: string;
                    export { type_1076 as type };
                }
                export namespace lang {
                    let type_1077: string;
                    export { type_1077 as type };
                }
                export namespace region {
                    let type_1078: string;
                    export { type_1078 as type };
                }
                export namespace module {
                    let type_1079: string;
                    export { type_1079 as type };
                }
            }
            export { properties_6 as properties };
            let required_4: string[];
            export { required_4 as required };
            let additionalProperties_4: boolean;
            export { additionalProperties_4 as additionalProperties };
        }
        let fundamentalsTimeSeries: {};
        let processQuery: {};
        let entryType: {};
        let processResponse: {};
    }
}
export default _default;
//# sourceMappingURL=fundamentalsTimeSeries.schema.d.ts.map